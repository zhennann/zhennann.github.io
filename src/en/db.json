{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/EggBornJS.png","path":"images/EggBornJS.png","modified":1,"renderable":0},{"_id":"source/images/eggborn.png","path":"images/eggborn.png","modified":1,"renderable":0},{"_id":"source/images/eggborn.svg","path":"images/eggborn.svg","modified":1,"renderable":0},{"_id":"source/images/privatemodule.png","path":"images/privatemodule.png","modified":1,"renderable":0},{"_id":"source/images/publicmodule.png","path":"images/publicmodule.png","modified":1,"renderable":0},{"_id":"source/images/structure.png","path":"images/structure.png","modified":1,"renderable":0},{"_id":"themes/indigo/source/css/style.less","path":"css/style.less","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/alipay.jpg","path":"img/alipay.jpg","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/avatar.jpg","path":"img/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/img-err.png","path":"img/img-err.png","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/cc.png","path":"img/cc.png","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/brand.jpg","path":"img/brand.jpg","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/img-loading.png","path":"img/img-loading.png","modified":1,"renderable":1},{"_id":"themes/indigo/source/img/wechat.jpg","path":"img/wechat.jpg","modified":1,"renderable":1},{"_id":"themes/indigo/source/js/main.min.js","path":"js/main.min.js","modified":1,"renderable":1},{"_id":"themes/indigo/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/indigo/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/indigo/source/js/search.min.js","path":"js/search.min.js","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.eot","path":"css/fonts/roboto/Roboto-Bold.eot","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff","path":"css/fonts/roboto/Roboto-Bold.woff","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff2","path":"css/fonts/roboto/Roboto-Bold.woff2","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.eot","path":"css/fonts/roboto/Roboto-Light.eot","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff","path":"css/fonts/roboto/Roboto-Light.woff","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff2","path":"css/fonts/roboto/Roboto-Light.woff2","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.eot","path":"css/fonts/roboto/Roboto-Medium.eot","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.eot","path":"css/fonts/roboto/Roboto-Regular.eot","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff2","path":"css/fonts/roboto/Roboto-Medium.woff2","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff","path":"css/fonts/roboto/Roboto-Medium.woff","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff","path":"css/fonts/roboto/Roboto-Regular.woff","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff2","path":"css/fonts/roboto/Roboto-Regular.woff2","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.eot","path":"css/fonts/roboto/Roboto-Thin.eot","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff","path":"css/fonts/roboto/Roboto-Thin.woff","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff2","path":"css/fonts/roboto/Roboto-Thin.woff2","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff2","path":"css/fonts/fontawesome/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff","path":"css/fonts/fontawesome/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.ttf","path":"css/fonts/roboto/Roboto-Bold.ttf","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.ttf","path":"css/fonts/roboto/Roboto-Light.ttf","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.ttf","path":"css/fonts/roboto/Roboto-Medium.ttf","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.ttf","path":"css/fonts/roboto/Roboto-Regular.ttf","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.ttf","path":"css/fonts/roboto/Roboto-Thin.ttf","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/FontAwesome.otf","path":"css/fonts/fontawesome/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.eot","path":"css/fonts/fontawesome/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.ttf","path":"css/fonts/fontawesome/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.svg","path":"css/fonts/fontawesome/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/indigo/.editorconfig","hash":"9b0445427777519defe360ea38c61729d847b3d3","modified":1508126343000},{"_id":"source/.DS_Store","hash":"6ce328b024e7320918fcef8122799eefbb1430a0","modified":1509779677000},{"_id":"themes/indigo/LICENSE","hash":"24944bf7920108f5a4790e6071c32e9102760c37","modified":1508126343000},{"_id":"themes/indigo/.DS_Store","hash":"9763befd3d30aeb9376024a3a38a104c25fa7051","modified":1508771128000},{"_id":"themes/indigo/package.json","hash":"64359a70dd3c185f7d3e661cc85d66c457da0269","modified":1508126343000},{"_id":"themes/indigo/README.md","hash":"b188fb95a9c16eb188eeffa6caa0895a14676338","modified":1508126343000},{"_id":"themes/indigo/_config.yml","hash":"77624941d499dfb746ce1e51704bec9438defa58","modified":1508896827000},{"_id":"source/_data/languages.yml","hash":"443a752bb91b932608243ab220368537acc91395","modified":1508168427000},{"_id":"source/_posts/tutorial.md","hash":"18c939e2894c480639375b4a39b0fa2d7b5eb6e6","modified":1509874721000},{"_id":"source/images/EggBornJS.png","hash":"6346c536b4f77420313eb9a3f7e4b99d9f881999","modified":1508253971000},{"_id":"source/images/eggborn.png","hash":"3a7e754d70efd81e42bc45d531e3122e5d36b136","modified":1508767810000},{"_id":"source/images/eggborn.svg","hash":"c0a497f25b3cf092c74bb20db40a93e5af008aa4","modified":1508764251000},{"_id":"source/images/privatemodule.png","hash":"de2a953cf7fdfdda1e89d220dd2dfb3d7fef9879","modified":1508256514000},{"_id":"source/images/publicmodule.png","hash":"13d076092559dd5e4bef3b119fa09d5c42937960","modified":1508257351000},{"_id":"source/images/structure.png","hash":"9be92233fe23932c67630404bf2b01bcf397a3b0","modified":1508256175000},{"_id":"themes/indigo/languages/zh-cn.yml","hash":"19989879a44d6a21132cbe226f548d11657f261d","modified":1508255356000},{"_id":"themes/indigo/languages/en.yml","hash":"3f37329c22cfdab871678a29c6ce85ed5c07e63f","modified":1508255343000},{"_id":"themes/indigo/languages/zh-tw.yml","hash":"55c126ef1f7cf742d5301d98ffa2be23a6e98e90","modified":1508255445000},{"_id":"themes/indigo/layout/archive.ejs","hash":"d039719e21f6a6fa2925b00aaa623a180a78c818","modified":1508126343000},{"_id":"themes/indigo/layout/categories.ejs","hash":"41783d2069d5080566a99e6312aa2113105f8b41","modified":1508126343000},{"_id":"themes/indigo/layout/category.ejs","hash":"7ea26a8a935886963eda82f41c7bd5270cf780d9","modified":1508126343000},{"_id":"themes/indigo/layout/index.ejs","hash":"39477807b98b2d2df78f3b82498a11e90be8222c","modified":1508126343000},{"_id":"themes/indigo/layout/layout.ejs","hash":"d52f43fa9572d70cae834e4887c8897b43744805","modified":1508126343000},{"_id":"themes/indigo/layout/page.ejs","hash":"afb98face24d39a21ebbbde6592a9afc98572aa4","modified":1508126343000},{"_id":"themes/indigo/layout/post.ejs","hash":"afbf8532dc8d148ca4dff2ca127a3382907cf2f5","modified":1508126343000},{"_id":"themes/indigo/scripts/plugins.js","hash":"e439d717513616bedeed37ba9b05117470809b21","modified":1508126343000},{"_id":"themes/indigo/layout/.DS_Store","hash":"81adcaca70186c971edd922bf46f7b7323322e38","modified":1508347215000},{"_id":"themes/indigo/layout/tag.ejs","hash":"36786a3de7f6cad58209603f7d84ba23addea174","modified":1508126343000},{"_id":"themes/indigo/layout/tags.ejs","hash":"20466446c41409d14a3d42ccaec24a65a045efef","modified":1508126343000},{"_id":"themes/indigo/source/.DS_Store","hash":"f3fff9ef16c0c6946c33133c0071baead2d1ab0e","modified":1509022813000},{"_id":"themes/indigo/layout/_partial/after-footer.ejs","hash":"9ac30b9439fab69973cf4722dbf2945a18fd3804","modified":1508126343000},{"_id":"themes/indigo/layout/_partial/archive.ejs","hash":"55cd81ef9183426d6d99fd91550fce0a9cc92aa0","modified":1508126343000},{"_id":"themes/indigo/layout/_partial/footer.ejs","hash":"1319871aa7f435859e6a57e027c3d565920c4ea3","modified":1508164455000},{"_id":"themes/indigo/layout/_partial/head.ejs","hash":"b811d39469da06e680015d0a87c1e2667b63c571","modified":1508776163000},{"_id":"themes/indigo/layout/_partial/header.ejs","hash":"3008d60bcd8ff7c635a6a1c000c16efb01458dbb","modified":1509780833000},{"_id":"themes/indigo/layout/_partial/index-item.ejs","hash":"ec7b3ec79bbbead9c7e43e2e6c6b5c8bef509410","modified":1508126343000},{"_id":"themes/indigo/layout/_partial/loading.ejs","hash":"bc4cb19b20de55a0332647f4dca9684184383685","modified":1508126343000},{"_id":"themes/indigo/layout/_partial/menu.ejs","hash":"e7f3e5bfb8d057f7c057e4da2cb02e5e8e44cbd7","modified":1508162397000},{"_id":"themes/indigo/layout/_partial/paginator.ejs","hash":"dc27242927890f130a64400596b9b7ad5fca8972","modified":1508126343000},{"_id":"themes/indigo/layout/_partial/post.ejs","hash":"a87d9b0485b3bf4cdfdad890e5974c43dbaa8240","modified":1508126343000},{"_id":"themes/indigo/layout/_partial/script.ejs","hash":"439d6315a1b16e32b77a68c3f0cb2961d581086a","modified":1508126343000},{"_id":"themes/indigo/layout/_partial/search.ejs","hash":"c2091c621b5480ef1e69d72027028cec8e929892","modified":1508126343000},{"_id":"themes/indigo/layout/_partial/tags-bar.ejs","hash":"19eff4876d31080a427644f7a43fe172d0c008c6","modified":1508126343000},{"_id":"themes/indigo/source/css/.DS_Store","hash":"c4528b6be909b5fb8afdba865366a1c04ccf1cb2","modified":1508347255000},{"_id":"themes/indigo/source/css/style.less","hash":"3e151cd162e8af87d7ca90e3067f7bd99a25f823","modified":1508126343000},{"_id":"themes/indigo/source/img/_avatar.jpg","hash":"62a4893b1a32e997dcdb6e467b10559df75221e2","modified":1508126343000},{"_id":"themes/indigo/source/img/alipay.jpg","hash":"6054d9ed2ca7cd1f645b729e05632134467d4daa","modified":1508126343000},{"_id":"themes/indigo/source/img/avatar.jpg","hash":"ea4a4dc476dce0ec978df7721f2992bd05277727","modified":1508162503000},{"_id":"themes/indigo/source/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1508126343000},{"_id":"themes/indigo/source/img/cc.png","hash":"ebce75a62b40976a72d43f0bd937d859ac24d87c","modified":1508126343000},{"_id":"themes/indigo/source/img/brand.jpg","hash":"0e237f1b433851c156e1f1cdaeb044054b3b9879","modified":1508126343000},{"_id":"themes/indigo/source/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1508126343000},{"_id":"themes/indigo/source/img/wechat.jpg","hash":"ef069cc9e80c7553fd60589b0727bbbf8c6de372","modified":1508126343000},{"_id":"themes/indigo/source/js/main.min.js","hash":"d7f707438ae19820246a2bf43bb136fde19412fb","modified":1508771043000},{"_id":"themes/indigo/source/js/main.js","hash":"e0c6079e59ed7fd75e8c24226fbc0cd96cb5a49c","modified":1508342427000},{"_id":"themes/indigo/source/js/search.js","hash":"a1de7e7a2ef8330ebcd9f3a7a4622b3bac44e4f3","modified":1508126343000},{"_id":"themes/indigo/source/js/search.min.js","hash":"a8a450bb8b1ca9ad577052addcbd3393f1af6c6a","modified":1508126343000},{"_id":"themes/indigo/layout/_partial/plugins/baidu.ejs","hash":"e44d526029f122e9c2c74f3a647c35002c818cbe","modified":1508126343000},{"_id":"themes/indigo/layout/_partial/plugins/disqus.ejs","hash":"4a0c01e4195f685f9825fcd016d01249dbdd52ca","modified":1508126343000},{"_id":"themes/indigo/layout/_partial/plugins/gitment.ejs","hash":"d263085819e08310491db0be040d077cb928c4b1","modified":1508609720000},{"_id":"themes/indigo/layout/_partial/plugins/dynamic-title.ejs","hash":"11669a86776bd0ba4052f4cfd7dcdf0b3c58f30d","modified":1508610763000},{"_id":"themes/indigo/layout/_partial/plugins/google-analytics.ejs","hash":"a947f4076b54b48d4df5baf2d5b3c39b632c7576","modified":1508126343000},{"_id":"themes/indigo/layout/_partial/plugins/mathjax.ejs","hash":"ea603a057196de53bd6afab1fddb93d11f27eb81","modified":1508126343000},{"_id":"themes/indigo/layout/_partial/plugins/page-visit.ejs","hash":"2decb77bf3c1a064ea6ce1d4e78892c434d9c884","modified":1508126343000},{"_id":"themes/indigo/layout/_partial/plugins/site-visit.ejs","hash":"8fbd0910828f1ab6eba728bdecc9811d623baae2","modified":1508126343000},{"_id":"themes/indigo/layout/_partial/plugins/tajs.ejs","hash":"97b48fe10be1c71d4ff25ccec3bd92d97466c9c5","modified":1508126343000},{"_id":"themes/indigo/layout/_partial/plugins/uyan.ejs","hash":"e370bd04ea5cf1c83e0c20516aff7ba3ca8b2d0b","modified":1508126343000},{"_id":"themes/indigo/layout/_partial/post/category.ejs","hash":"c7476165721a3a5e34d00d8c5c07e1e5474cd800","modified":1508126343000},{"_id":"themes/indigo/layout/_partial/post/comment.ejs","hash":"84efee0ef2fbf4e222456ab6ab8b5141287537e6","modified":1508126343000},{"_id":"themes/indigo/layout/_partial/post/head-meta.ejs","hash":"b0c680ce5b8aaf461a6731b1ff1287bd140c168a","modified":1508126343000},{"_id":"themes/indigo/layout/_partial/post/copyright.ejs","hash":"968b27ca952d01b066cfe49fb670faf177d6b67e","modified":1508126343000},{"_id":"themes/indigo/layout/_partial/post/date.ejs","hash":"ea85b46e12d3b9c3612eef7aa76289a663fbc096","modified":1508126343000},{"_id":"themes/indigo/layout/_partial/post/nav.ejs","hash":"11e7d504f7c7a3c4c052da13cfa8ea4862c9383e","modified":1508126343000},{"_id":"themes/indigo/layout/_partial/post/reward-btn.ejs","hash":"41c242fe3159dc68cec8dd00ab6d2663f5a51179","modified":1508126343000},{"_id":"themes/indigo/layout/_partial/post/share-fab.ejs","hash":"93482ad7d1e01b966f5ee1c5d12b88564e02b349","modified":1508126343000},{"_id":"themes/indigo/layout/_partial/post/reward.ejs","hash":"23719e09689b3afbb19214c6603eb02f896cb9ba","modified":1508126343000},{"_id":"themes/indigo/layout/_partial/post/share.ejs","hash":"8df0d7bf6f8e106cdbdac2dd10a97367aa0695f8","modified":1508126343000},{"_id":"themes/indigo/layout/_partial/post/tag.ejs","hash":"b3dc38652c4a018a37418136478dcd522fc49f79","modified":1508126343000},{"_id":"themes/indigo/layout/_partial/post/toc.ejs","hash":"b6123e895c16ace651f1832281ff655776d4068c","modified":1508126343000},{"_id":"themes/indigo/layout/_partial/post/title.ejs","hash":"062d56cb88ae2be3a6616b911d4ebeffcbfe3cff","modified":1508126343000},{"_id":"themes/indigo/layout/_partial/post/updated.ejs","hash":"5caa71745aa340ce57938a930f3b898ee7518d74","modified":1508126343000},{"_id":"themes/indigo/source/css/_partial/archives.less","hash":"7d2a6886265386c640e94ffca3f042675f701a35","modified":1508126343000},{"_id":"themes/indigo/source/css/_partial/article.less","hash":"4ea7ef6dc47a3df8d31bac4bdf83c17d4161f593","modified":1508126343000},{"_id":"themes/indigo/source/css/_partial/gotop.less","hash":"b7db31b9bc563c10b9e3cf3e6d9cfddfeb3e805a","modified":1508126343000},{"_id":"themes/indigo/source/css/_partial/header.less","hash":"f8ed9131d708e2defe914a09a111b90b70f0efaa","modified":1509780773000},{"_id":"themes/indigo/source/css/_partial/highlight.less","hash":"58492b7cdb45fe09b026b2f34e8ae69c2ddb8228","modified":1508126343000},{"_id":"themes/indigo/source/css/_partial/lightbox.less","hash":"9b961eb1d70e7658f42cf2ca895fa5e35a6b6541","modified":1508126343000},{"_id":"themes/indigo/source/css/_partial/layout.less","hash":"19308ed333f5b7da00251b01adf40122137819a7","modified":1508174399000},{"_id":"themes/indigo/source/css/_partial/loading.less","hash":"f9d06a1e24fb4857fd18d7a0bfbb3a0ab2d1c742","modified":1508126343000},{"_id":"themes/indigo/source/css/_partial/page.less","hash":"e92ccb53e6ac73a51498c6a9672db9d0d2bc7f1a","modified":1508126343000},{"_id":"themes/indigo/source/css/_partial/reward.less","hash":"4857f90bb57fc22ca3f942d8934d86d5e9e82c1e","modified":1508126343000},{"_id":"themes/indigo/source/css/_partial/postlist.less","hash":"1c041bf91106808e5480c60d9ece45431bb503b3","modified":1508126343000},{"_id":"themes/indigo/source/css/_partial/roboto.less","hash":"2e0469ed8161d5672d903ca1a8027cd65fe007f1","modified":1508126343000},{"_id":"themes/indigo/source/css/_partial/search.less","hash":"1d6641ae7568a0153d24beba9fd9704d2b155f6c","modified":1508126343000},{"_id":"themes/indigo/source/css/_partial/share.less","hash":"27d80bcc96a53dd1e7eaa9a7d746e4b212357302","modified":1508126343000},{"_id":"themes/indigo/source/css/_partial/tags.less","hash":"959f4373fda6e45f6a4041a995ed3ea8a05a5170","modified":1508126343000},{"_id":"themes/indigo/source/css/_partial/variable.less","hash":"082896b966ed25b39c74e7b007b4f54c235685a4","modified":1508126343000},{"_id":"themes/indigo/source/css/_partial/waves.less","hash":"77bfd0b373b0469eb0176167fb076ccda4edf2a7","modified":1508126343000},{"_id":"themes/indigo/source/css/_partial/fontawesome.less","hash":"ca30b732d2efbb0cd55a272ecdabc97f895aee78","modified":1508126343000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.eot","hash":"a76cd602f5188b9fbd4ba7443dcb9c064e3dbf10","modified":1508126343000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff","hash":"ee99cd87a59a9a5d4092c83232bb3eec67547425","modified":1508126343000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff2","hash":"933b866d09c2b087707a98dab64b3888865eeb96","modified":1508126343000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.eot","hash":"42fe156996197e5eb0c0264c5d1bb3b4681f4595","modified":1508126343000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff","hash":"6300f659be9e834ab263efe2fb3c581d48b1e7b2","modified":1508126343000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff2","hash":"bbdc28b887400fcb340b504ec2904993af42a5d7","modified":1508126343000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.eot","hash":"1517f4b6e1c5d0e5198f937557253aac8fab0416","modified":1508126343000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.eot","hash":"77ae3e980ec03863ebe2587a8ef9ddfd06941db0","modified":1508126343000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff2","hash":"6cc1b73571af9e827c4e7e91418f476703cd4c4b","modified":1508126343000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff","hash":"d45f84922131364989ad6578c7a06b6b4fc22c34","modified":1508126343000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff","hash":"74734dde8d94e7268170f9b994dedfbdcb5b3a15","modified":1508126343000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff2","hash":"ed1558b0541f5e01ce48c7db1588371b990eec19","modified":1508126343000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.eot","hash":"0790a51a848dbe7292c98f9d0459218bf1a8ffdd","modified":1508126343000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff","hash":"fbc3e71d456c96667d8082ab910e3946ef89240b","modified":1508126343000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff2","hash":"2449e3dac5ddb7c3da8bb07450493b62d052758c","modified":1508126343000},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1508126343000},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1508126343000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.ttf","hash":"47327df0f35e7cd7c8645874897a7449697544ae","modified":1508126343000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.ttf","hash":"e321c183e2b75ee19813892b7bac8d7c411cb88a","modified":1508126343000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.ttf","hash":"6060ca726b9760b76f7c347dce9d2fa1fe42ec92","modified":1508126343000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.ttf","hash":"824b5480c977a8166e177e5357d13164ccc45f47","modified":1508126343000},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.ttf","hash":"173ed64528b4d010a76d8d38deb1d7e7eed58eda","modified":1508126343000},{"_id":"themes/indigo/source/css/fonts/fontawesome/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1508126343000},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1508126343000},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1508126343000},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1508126343000},{"_id":"public/atom.xml","hash":"811fbe779c4b48b54897bc788ea927e1d1fa1233","modified":1509874765512},{"_id":"public/content.json","hash":"5ebcd703e53c9d2db8b556799345fdbcb870dcb0","modified":1509874765746},{"_id":"public/archives/index.html","hash":"e68d65fabd7f8a70f077568a5ff5f7759bb80737","modified":1509874765759},{"_id":"public/archives/2017/index.html","hash":"da24354d98321a773d93e09938c2dd40a324adec","modified":1509874765759},{"_id":"public/archives/2017/10/index.html","hash":"dc5f271ed84c9cbcda54e3bd8abd04b99950f017","modified":1509874765759},{"_id":"public/categories/docs/index.html","hash":"cdd6045b0a0ad045dadec9b41730282581982217","modified":1509874765759},{"_id":"public/index.html","hash":"5546f88e07760cb779e7bf3e3ef8393d8e02db32","modified":1509874765759},{"_id":"public/docs/tutorial/index.html","hash":"0f116e53ef4134418ddd7456e2301cfffe6f0e21","modified":1509874765759},{"_id":"public/images/EggBornJS.png","hash":"6346c536b4f77420313eb9a3f7e4b99d9f881999","modified":1509874765768},{"_id":"public/images/eggborn.png","hash":"3a7e754d70efd81e42bc45d531e3122e5d36b136","modified":1509874765768},{"_id":"public/images/eggborn.svg","hash":"c0a497f25b3cf092c74bb20db40a93e5af008aa4","modified":1509874765768},{"_id":"public/images/privatemodule.png","hash":"de2a953cf7fdfdda1e89d220dd2dfb3d7fef9879","modified":1509874765782},{"_id":"public/images/publicmodule.png","hash":"13d076092559dd5e4bef3b119fa09d5c42937960","modified":1509874765783},{"_id":"public/images/structure.png","hash":"9be92233fe23932c67630404bf2b01bcf397a3b0","modified":1509874765783},{"_id":"public/img/alipay.jpg","hash":"6054d9ed2ca7cd1f645b729e05632134467d4daa","modified":1509874765783},{"_id":"public/img/avatar.jpg","hash":"ea4a4dc476dce0ec978df7721f2992bd05277727","modified":1509874765784},{"_id":"public/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1509874765784},{"_id":"public/img/cc.png","hash":"ebce75a62b40976a72d43f0bd937d859ac24d87c","modified":1509874765784},{"_id":"public/img/brand.jpg","hash":"0e237f1b433851c156e1f1cdaeb044054b3b9879","modified":1509874765784},{"_id":"public/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1509874765785},{"_id":"public/img/wechat.jpg","hash":"ef069cc9e80c7553fd60589b0727bbbf8c6de372","modified":1509874765785},{"_id":"public/css/fonts/roboto/Roboto-Bold.eot","hash":"a76cd602f5188b9fbd4ba7443dcb9c064e3dbf10","modified":1509874765785},{"_id":"public/css/fonts/roboto/Roboto-Bold.woff","hash":"ee99cd87a59a9a5d4092c83232bb3eec67547425","modified":1509874765785},{"_id":"public/css/fonts/roboto/Roboto-Bold.woff2","hash":"933b866d09c2b087707a98dab64b3888865eeb96","modified":1509874765785},{"_id":"public/css/fonts/roboto/Roboto-Light.eot","hash":"42fe156996197e5eb0c0264c5d1bb3b4681f4595","modified":1509874765785},{"_id":"public/css/fonts/roboto/Roboto-Light.woff","hash":"6300f659be9e834ab263efe2fb3c581d48b1e7b2","modified":1509874765785},{"_id":"public/css/fonts/roboto/Roboto-Light.woff2","hash":"bbdc28b887400fcb340b504ec2904993af42a5d7","modified":1509874765786},{"_id":"public/css/fonts/roboto/Roboto-Medium.eot","hash":"1517f4b6e1c5d0e5198f937557253aac8fab0416","modified":1509874765786},{"_id":"public/css/fonts/roboto/Roboto-Regular.eot","hash":"77ae3e980ec03863ebe2587a8ef9ddfd06941db0","modified":1509874765786},{"_id":"public/css/fonts/roboto/Roboto-Medium.woff2","hash":"6cc1b73571af9e827c4e7e91418f476703cd4c4b","modified":1509874765786},{"_id":"public/css/fonts/roboto/Roboto-Medium.woff","hash":"d45f84922131364989ad6578c7a06b6b4fc22c34","modified":1509874765786},{"_id":"public/css/fonts/roboto/Roboto-Regular.woff","hash":"74734dde8d94e7268170f9b994dedfbdcb5b3a15","modified":1509874765786},{"_id":"public/css/fonts/roboto/Roboto-Regular.woff2","hash":"ed1558b0541f5e01ce48c7db1588371b990eec19","modified":1509874765786},{"_id":"public/css/fonts/roboto/Roboto-Thin.eot","hash":"0790a51a848dbe7292c98f9d0459218bf1a8ffdd","modified":1509874765786},{"_id":"public/css/fonts/roboto/Roboto-Thin.woff","hash":"fbc3e71d456c96667d8082ab910e3946ef89240b","modified":1509874765787},{"_id":"public/css/fonts/roboto/Roboto-Thin.woff2","hash":"2449e3dac5ddb7c3da8bb07450493b62d052758c","modified":1509874765787},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1509874765824},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1509874765825},{"_id":"public/css/fonts/roboto/Roboto-Bold.ttf","hash":"47327df0f35e7cd7c8645874897a7449697544ae","modified":1509874765825},{"_id":"public/css/fonts/roboto/Roboto-Light.ttf","hash":"e321c183e2b75ee19813892b7bac8d7c411cb88a","modified":1509874765826},{"_id":"public/css/fonts/roboto/Roboto-Medium.ttf","hash":"6060ca726b9760b76f7c347dce9d2fa1fe42ec92","modified":1509874765826},{"_id":"public/css/fonts/roboto/Roboto-Regular.ttf","hash":"824b5480c977a8166e177e5357d13164ccc45f47","modified":1509874765826},{"_id":"public/css/fonts/roboto/Roboto-Thin.ttf","hash":"173ed64528b4d010a76d8d38deb1d7e7eed58eda","modified":1509874765826},{"_id":"public/js/main.min.js","hash":"d7f707438ae19820246a2bf43bb136fde19412fb","modified":1509874765833},{"_id":"public/js/search.js","hash":"a1de7e7a2ef8330ebcd9f3a7a4622b3bac44e4f3","modified":1509874765833},{"_id":"public/js/search.min.js","hash":"a8a450bb8b1ca9ad577052addcbd3393f1af6c6a","modified":1509874765834},{"_id":"public/js/main.js","hash":"e0c6079e59ed7fd75e8c24226fbc0cd96cb5a49c","modified":1509874765834},{"_id":"public/css/fonts/fontawesome/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1509874765834},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1509874765834},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1509874765834},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1509874765855},{"_id":"public/css/style.css","hash":"24d146e84f656e64cbfd7f8ec00f9aa09eb3731e","modified":1509874766522}],"Category":[{"name":"docs","_id":"cj9mkg8p40001bds3txf74trd"}],"Data":[{"_id":"languages","data":{"zh-cn":"简体中文","en":"English"}}],"Page":[],"Post":[{"title":"EggBorn.js Development Guide","caption":"tutorial","date":"2017-10-17T10:18:14.000Z","_content":"\n## What is EggBorn.js?\n> EggBorn.js is the Ultimate Javascript Full Stack Framework.\n\nEggBorn.js is the best practice for implementing full stack with Javascript.\nEggBorn.js does not 'Reinvent the Wheel', but uses the latest open source technology, so as to achieve the best combination of the full stack development technology.\nThe frontend of EggBorn.js uses Vue.js + Framework 7 / Vue Router + Webpck, while the backend uses Koa.js + Egg.js, and the database uses mysql.\nEggBorn.js keeps track of the latest achievements in open source technology, and continues to optimize to keep the entire framework in the best status.\n\n## EggBorn.js Focus on: Business Modularization\n\nWith the developing of the javascript technology, the experience of the frontend and backend development becomes smoother, and the development efficiency enhance significantly. However, some friends still doubt whether it can be competent for the development of large-scale web applications. Large-scale web applications are characterized by the need to develop a large number of page components as business grows. Faced with this situation, generally there are two solutions:\n\n> 1 Build as a single page application: The disadvantage is that the deployment package is very large.\n> 2 All page components are loaded asynchronously: The disadvantage is that the pages are too scattered, so the frontend should interact with the backend frequently.\n\nEggBorn.js implements the third solution:\n> 3 The page components are classified by business requirements, which is business modularization, and implements the business module’s asynchronous loading mechanism. Thus it makes up the shortcomings of the first two solutions and satisfies the needs of the large-scale web application.\n\n\n## EggBorn.js Technical Features\n\n- **Business Modularization**: The page components are arranged as modules.\n- **Loading Flexibility**: Modules can be loaded asynchronously or synchronously.\n- **Highly Modular Cohesion**: The module includes frontend page components and backend business logics.\n- **Parameter Configuration Flexibility**: Both frontend and backend of the module can be configured separately.\n- **I18N**: Both frontend and backend of the module support i18n separately.\n- **Module Isolation**: Module’s pages, data, logic, routing, configuration and other elements have been through namespace isolation processing, which avoids the variable pollutions and conflicts.\n- **Easy Transaction Processing**: Just configuring a parameter on the routing record can process the database transaction perfectly.\n- **Progressive Development**: Due to the high degree of cohesion of the module, EggBorn.js can deposit the business in the form of module, which can be reused in multiple projects. Business modules can be contributed to the npm Open Source Community, and can also be deployed to the company’s internal private npm registry.\n\n>With EggBorn.js, not only the components can be reused, but also the business modules do in the future.\n\n## Getting Started\n\n### Installation\n\n``` bash\n$ npm install -g egg-born\n```\n\n### Create a project\n\n``` bash\n$ egg-born project_name\n$ cd project_name\n$ npm install\n```\n\n> Currently, EggBorn.js offers two project scaffolds:\n> - `front-backend-mysql`  -- full stack project template\n> - `front`                -- frontend-only project template\n\n### Configure MySQL\n\nIf choose the template `front-backend-mysql`, please configure mysql connection parameters. (empty database just does well)\n\nEdit the file: `src/backend/config/config.default.js`\n``` javascript\n  // mysql\n  config.mysql = {\n    clients: {\n      // donot change the name  \n      __ebdb: {\n        host: '127.0.0.1',\n        port: '3306',\n        user: 'travis',\n        password: '',\n        database: 'egg-born',\n      },\n    },\n  };\n```\n\n### Run\n\nStart Backend Service\n``` bash\n$ npm run dev:backend\n```\n\nStart Frontend Service\n``` bash\n$ npm run dev:front\n```\n\n## EggBorn.js Structure Diagram\n\n### System Structure\n![](/en/images/EggBornJS.png)\n\n### Project Files Structure\n![](/en/images/structure.png)\n\n### Module Files Structure\n![](/en/images/privatemodule.png)\n![](/en/images/publicmodule.png)\n\n## Module Development\n\n### Naming Convention\n\nIn order to increase the business modules continuously and achieve a highly reusable effect, the namespace of all modules must be fully isolated, to avoid mutual pollution and conflict. Thus the naming convention is as follows:\n> egg-born-module-{providerId}-{moduleName}\n\nSuch as the module `egg-born-module-a-version`, the naming information is as follows:\n> - `providerId`: a\n> - `moduleName`: version\n> - `fullName`: egg-born-module-a-version\n> - `relativeName`: a-version\n> - frontend page route url: /a/version/{page}\n> - backend api route url: /a/version/{controller}/{action}\n\n### Loading Mechanism\n\nThe module supports both asynchronous loading and synchronous loading. Generally, the default is asynchronous loading. If you want to change it into synchronous loading, just add `-sync` suffix behind the module name, such as the module `egg-born-module-aa-login-sync`.\n\n### Create a module\nGoto path`src/module`, run the scaffolding to create the module files skeleton.\n``` bash\n$ egg-born module_relative_name\n```\n\n> At present, EggBorn.js offers two module scaffolds:\n> - `module`               -- full stack module template\n> - `module-front`         -- frontend-only module template\n\n### Module Frontend Development\n\n#### Frontend Page Route\nIn the file `front/src/routes.js`, add the page route:\n``` javascript\nfunction load(name) {\n  return require(`./pages/${name}.vue`).default;\n}\n\nexport default [\n  { path: 'welcome/:who', component: load('welcome') },\n  { path: 'profile', component: load('profile'), meta: { requiresAuth: true } },\n  { path: '/login', component: load('login') },\n];\n```\n\n> - `path`: supports parameters. If the path starts with `/`, represent the root page component. `login` page component is usually configured with `/`\n> - `component`: page component\n> - `meta`: route metadata\n> - `meta.requiresAuth`: If the page component needs to be logged in, it should be set to `true`\n\nIf you reference the page component in the page, please use the absolute path:\n``` html\n<f7-list-item link=\"/aa/hello/welcome/You\" title=\"Welcome\"></f7-list-item>\n<f7-list-item link=\"/aa/hello/profile\" title=\"Profile\"></f7-list-item>\n```\n\n#### Frontend State Management\n\nVuex is a state management library, which is developed specifically for Vue.js applications. EggBorn.js uses Vuex to implement a fully isolated module state management mechanism.\n\nIn the file `front/src/store.js`, add the state:\n``` javascript\nexport default function(Vue) {\n\n  return {\n    state: {\n      message: 'hello world',\n    },\n  };\n\n}\n```\n\nAccess the state of the same module in the page component:\n``` javascript\nconst message = this.$local.state.message;\n```\n\nAccess the state of the other module in the page component:\n``` javascript\nconst message = this.$store.state[providerId][moduleName].message;\n```\n\n> For more information, see [Vuex](https://vuex.vuejs.org/)\n\n#### Frontend Parameters Configuration\n\nIn the file `front/src/config/config.js`, add the configuration information:\n``` javascript\nexport default {\n  mode: 1,\n};\n```\n\nAccess the config of the same module in the page component:\n``` javascript\nconst mode = this.$config.mode;\n```\n\n#### Frontend I18N\n\nIn the directory `front/src/config/locale`, add the i18n file, such as `zh-cn.js`:\n``` javascript\nexport default {\n  mode: '模式',\n  \"Hello world! I'm %s.\": '您好，世界！我是%s。',  \n};\n```\n\nI18N resources can be merged globally, so as to share i18n resources through all the modules.\n\nAccess the i18n resources in the page component:\n``` javascript\nconst mode = this.$text('mode');\nconst message = this.$text(\"Hello world! I'm %s.\",'zhennann');\n```\n\n### Module Backend Development \n\n#### Backend API Route\n\nIn the file `backend/src/routes.js`, add the api route:\n``` javascript\nconst home = require('./controller/home.js');\n\nmodule.exports = [\n  { method: 'get', path: 'home/index', controller: home, action: 'index', transaction: true },\n];\n```\n\n> - `method`: get/post etc.\n> - `path`: Supports parameters\n> - `component`: Controller Component\n> - `action`: Controller Action. If not set, will use the last word of `path` automatically.\n> - `transaction`: Default is false. If set to true, the database transaction will be enabled.\n\nAccess the api route of the same module in the frontend page component:\n``` javascript\nthis.$api.get('home/index').then(data => {\n}).catch(err => {\n});\n```\n\nAccess the api route of the other module in the frontend page component:\n``` javascript\nthis.$api.get('/providerId/moduleName/home/index').then(data => {\n}).catch(err => {\n});\n```\n\n#### Backend Controller\n\nThe backend controller is consistent with Egg.js\n``` javascript\nmodule.exports = app => {\n  class HomeController extends app.Controller {\n\n    async index() {\n      const message = await this.service.home.index();\n      this.ctx.success(message);\n    }\n\n  }\n  return HomeController;\n};\n```\n\n> For more information，see [Egg.js Controller](https://eggjs.org/en/basics/controller.html)\n\n#### Backend Service\n\nService is used to encapsulate the business logics. It is consistent with Egg.js\n``` javascript\nmodule.exports = app => {\n  class Home extends app.Service {\n\n    async index() {\n      const res = await this.ctx.db.queryOne('show tables');\n      return res;\n    }\n\n  }\n\n  return Home;\n};\n```\n\n> Different from Service of Egg.js, Service of EggBorn.js uses `ctx.db` to manipulate the database, which automatically supports database transaction.\n\n> For more information，see [Egg.js Service](https://eggjs.org/en/basics/service.html)\n\n#### Backend Controller Interoperability\nFor the development of large-scale web application, EggBorn.js supports interoperability between the backend controllers, such as\n``` javascript\nconst message = await this.ctx.performAction({\n  method: 'get',\n  url: 'home/index',\n  query: {\n    username: 'kevin',\n  },\n  params: {\n    mode: 1,\n  },\n  body: {\n    content: 'ready',\n  },\n});\n```\n\n> - `method`: get/post etc.\n> - `url`: If access backend controller of the same module, please use the relative path. If access backend contrller of the other module, please use the absolute path with the beginning of `/`\n> - `query`、`params`、`body`: Same as Egg.js Controller\n\n#### Backend Database Operation\n\nThe backend database operation is consistent with Egg.js\n> For more information，see [Egg.js MySQL](https://eggjs.org/en/tutorials/mysql.html)\n\n#### Backend Database Transaction\n\nEggBorn.js offers a more convenient database transaction processing. You just need to configure the transaction parameter in the backend api route. Service uses `ctx.db` to operate database.\nIf the `controller caller` calls the `controller callee` through `ctx.performAction`, the database transaction status is as follow:\n\n| Controller Caller Config | Controller Callee Config | Controller Callee Status |\n|:----------------|:----------------|:-------------------- |\n| true            | true            | true                 |\n| true            | false           | true                 |\n| false           | true            | true                 |\n| false           | false           | false                |\n\n#### Backend Parameters Configuration\n\nIn the file `backend/src/config/config.js`, add the configuration information:\n``` javascript\nmodule.exports = appInfo => {\n  const config = {};\n\n  config.message = \"Hello world! I'm %s.\";\n\n  return config;\n};\n```\n\nAccess the config of the same module:\n``` javascript\nconst message = this.ctx.config.message;\n```\n\n#### Backend I18N\n\nIn the directory `backend/src/config/locale`, add the i18n file, such as `zh-cn.js`:\n``` javascript\nmodule.exports = {\n  \"Hello world! I'm %s.\": '您好，世界！我是%s。',\n  'not found': '未发现',\n};\n```\n\nI18N resources can be merged globally, so as to share i18n resources through all the modules.\n\nAccess the i18n resources:\n``` javascript\nconst notFound = this.ctx.text('not found');\nconst message = this.ctx.text(\"Hello world! I'm %s.\", 'zhennann');\n```\n\n#### Backend Error Handing\n\nIn the file `backend/src/config/errors.js`, add the error code:\n``` javascript\n// error code should start from 1001\nmodule.exports = {\n  1001: 'not found',\n};\n```\n\nReturn error object:\n``` javascript\nthis.ctx.fail(1001);\n```\n\nThrow error exception:\n``` javascript\nthis.ctx.throw(1001);\n```\n\n## Module Management\n\n### Module Dependencies\n\nEggBorn.js manages module dependencies through `package.json`.\n\nFor example, module `aa-module1` depends on `aa-module2`, and the following configuration is needed in the file `package.json` of the module `aa-module1`:\n``` json\n{\n  \"name\": \"egg-born-module-aa-module1\",\n  \"version\": \"0.0.1\",\n  \"eggBornModule\": {\n    \"dependencies\": {\n      \"aa-module2\": \"0.0.1\"\n    }\n  },\n  \"dependencies\": {\n    \"egg-born-module-aa-module2\": \"^0.0.1\"\n  }\n}\n```\n\n> Add `\"egg-born-module-aa-module2\": \"^0.0.1\"` so as to install the module `aa-module2` automatically when installing module `aa-module1`\n\n\n### Module Data Version\n\nGenerally Modules should operate the database. The database structure is also possible to change when the module version upgrade. EggBorn.js manage the module data version so as to facilitate the accumulation of business modules.\n\nIn the file `package.json` of the module, configure `fileVersion` as the current data version of the module:\n``` json\n{\n  \"name\": \"egg-born-module-aa-module1\",\n  \"version\": \"0.0.1\",\n  \"eggBornModule\": {\n    \"fileVersion\": 1\n  }\n}\n```\n\nAdd backend api route:\n``` javascript\n{ method: 'post', path: 'version/update', controller: version }\n```\n\nAdd backend controller:\n``` javascript\nmodule.exports = app => {\n  class VersionController extends app.Controller {\n\n    async update() {\n      await this.service.version.update(this.ctx.getInt('version'));\n      this.ctx.success();\n    }\n\n  }\n  return VersionController;\n};\n```\n\nAdd backend service:\n``` javascript\nmodule.exports = app => {\n\n  class Version extends app.Service {\n\n    async update(version) {\n      if (version === 1) {\n        // do something\n      }\n    }\n\n  }\n\n  return Version;\n};\n```\n\n> When the project started, EggBorn.js detects the change of the module data version automatically, and executes the corresponding api route to upgrade the data version.\n\n### Module Publish\n\nWhen the module in the project is stable, you can publish and contribute the module to the Open Source Community. You can also create private npm registry in your company, and then publish the module there, so as to form company assets for easy reuse.\n\n``` bash\n$ cd path/to/module      -- Goto the module directory\n$ npm install            -- Install module dependencies\n$ npm run build:front    -- Build frontend\n$ npm run build:backend  -- Build backend\n$ npm publish            -- Publish to npm registry\n```\n\n## Test Driven Development\nOnly backend test driven development is supported currently.\n\n### Backend Controller Test\n\nIn the directory `backend/test/controller`, add controller test file:\n``` javascript\n// controller/home.test.js\nconst { app, mockUrl, assert } = require('egg-born-mock')(__dirname);\n\ndescribe('test/controller/home.test.js', () => {\n\n  it('action:index', async () => {\n    const result = await app.httpRequest().get(mockUrl('home/index'));\n    assert(result.body.code === 0);\n  });\n\n});\n```\n\n### Backend Service Test\n\nIn the directory `backend/test/service`, add service test file:\n``` javascript\n// service/home.test.js\nconst { app, mockUrl, assert } = require('egg-born-mock')(__dirname);\n\ndescribe('test/service/home.test.js', () => {\n\n  it('index', async () => {\n    const ctx = app.mockContext({ mockUrl: mockUrl() });\n    const message = await ctx.service.home.index();\n    assert(message);\n  });\n\n});\n```\n\n### Run Test\n\nRun test in the project root directory:\n``` bash\n$ npm run test:backend\n$ npm run cov:backend\n```\n\n## Frontend Framework Configuration\n\n### Frontend Bootstrap\n\nFrontend provides two bootstraps\n\n> 1. Vue.js + Framework7\n> 2. Vue.js + Vue Router\n\nFramework7 is a mobile UI liabrary with built-in routing mechanism.\nVue Router is the official routing library for Vue.js. Vue Router can be used with other various UI libraries.\n\nSwitch in the file `src/front/main.js`:\n``` javascript\n// choose one\n\n//   framework7\nimport main from './framework7/main.js';\n\n//   vuerouter\n// import main from './vuerouter/main.js';\n\n// export\nexport default main;\n```\n\n### Frontend Parameters Configuration\n\nThe parameters of the file `src/front/config/config.js` can override the parameters of the modules\n``` javascript\nexport default{\n  module: {\n    'aa-hello': {\n      mode: 2,\n    },\n  },\n};\n```\n\n### Frontend I18N\n\nFramework i18n resources can override the modules's ones.\n\nIn the directory `src/front/config/locale`, add the i18n file, such as `zh-cn.js`:\n``` javascript\nexport default {\n  mode: '模式',\n};\n```\n\n## Backend Framework Configuration\n\n### Backend Framework\nEggBorn.js backend framework is based on Egg.js，so supports all of the features provided by Egg.js\n> For more information，see [Egg.js](https://eggjs.org/)\n\n### Backend Parameters Configuration\n\nThe parameters of the file `src/backend/config/config.default.js` can override the parameters of the modules.\n``` javascript\nmodule.exports = appInfo => {\n  const config = {};\n\n  // module config\n  config.module = {\n    'aa-hello': {\n      mode: 2,\n    },\n  };\n\n  return config;\n};\n```\n\n### Backend I18N\n\nFramework i18n resources can override the modules's ones.\n\nIn the directory `src/backend/config/locale`, add the i18n file, such as `zh-cn.js`:\n``` javascript\nmodule.exports = {\n  mode: '模式',\n};\n```\n\n## Project Deployment\n\n### Build Frontend\n``` bash\n$ npm run build:front\n```\n\n### Start Backend\n``` bash\n$ npm run start:backend\n```\n\n### Stop Backend\n``` bash\n$ npm run stop:backend\n```\n\n### Backend Start Parameters\nEdit the file `build/config.js`:\n``` javascript\n// backend\nconst backend = {\n  port: 7002,\n  hostname: '127.0.0.1',\n};\n```\n\n### Nginx Configuration\n\nSuggest to use Nginx hosting frontend static resources and reverse proxy backend service\n``` javascript\nserver {\n  listen 80;\n  server_name example.com www.example.com;\n  set $node_port 7002;\n\n  root /path/to/www;\n\n  location  /api/ {\n    proxy_http_version 1.1;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header Host $http_host;\n    proxy_set_header X-NginX-Proxy true;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection \"upgrade\";\n    proxy_pass http://127.0.0.1:$node_port$request_uri;\n    proxy_redirect off;\n  }\n\n}\n```\n\n## GitHub Contribution\n> Any questions, welcome to submit [issue](https://github.com/zhennann/egg-born/issues), or fork and submit [PR](https://github.com/zhennann/egg-born/pulls)!\n\n","source":"_posts/tutorial.md","raw":"---\ntitle: EggBorn.js Development Guide\ncaption: tutorial\ndate: 2017-10-17 18:18:14\ncategory: docs\n---\n\n## What is EggBorn.js?\n> EggBorn.js is the Ultimate Javascript Full Stack Framework.\n\nEggBorn.js is the best practice for implementing full stack with Javascript.\nEggBorn.js does not 'Reinvent the Wheel', but uses the latest open source technology, so as to achieve the best combination of the full stack development technology.\nThe frontend of EggBorn.js uses Vue.js + Framework 7 / Vue Router + Webpck, while the backend uses Koa.js + Egg.js, and the database uses mysql.\nEggBorn.js keeps track of the latest achievements in open source technology, and continues to optimize to keep the entire framework in the best status.\n\n## EggBorn.js Focus on: Business Modularization\n\nWith the developing of the javascript technology, the experience of the frontend and backend development becomes smoother, and the development efficiency enhance significantly. However, some friends still doubt whether it can be competent for the development of large-scale web applications. Large-scale web applications are characterized by the need to develop a large number of page components as business grows. Faced with this situation, generally there are two solutions:\n\n> 1 Build as a single page application: The disadvantage is that the deployment package is very large.\n> 2 All page components are loaded asynchronously: The disadvantage is that the pages are too scattered, so the frontend should interact with the backend frequently.\n\nEggBorn.js implements the third solution:\n> 3 The page components are classified by business requirements, which is business modularization, and implements the business module’s asynchronous loading mechanism. Thus it makes up the shortcomings of the first two solutions and satisfies the needs of the large-scale web application.\n\n\n## EggBorn.js Technical Features\n\n- **Business Modularization**: The page components are arranged as modules.\n- **Loading Flexibility**: Modules can be loaded asynchronously or synchronously.\n- **Highly Modular Cohesion**: The module includes frontend page components and backend business logics.\n- **Parameter Configuration Flexibility**: Both frontend and backend of the module can be configured separately.\n- **I18N**: Both frontend and backend of the module support i18n separately.\n- **Module Isolation**: Module’s pages, data, logic, routing, configuration and other elements have been through namespace isolation processing, which avoids the variable pollutions and conflicts.\n- **Easy Transaction Processing**: Just configuring a parameter on the routing record can process the database transaction perfectly.\n- **Progressive Development**: Due to the high degree of cohesion of the module, EggBorn.js can deposit the business in the form of module, which can be reused in multiple projects. Business modules can be contributed to the npm Open Source Community, and can also be deployed to the company’s internal private npm registry.\n\n>With EggBorn.js, not only the components can be reused, but also the business modules do in the future.\n\n## Getting Started\n\n### Installation\n\n``` bash\n$ npm install -g egg-born\n```\n\n### Create a project\n\n``` bash\n$ egg-born project_name\n$ cd project_name\n$ npm install\n```\n\n> Currently, EggBorn.js offers two project scaffolds:\n> - `front-backend-mysql`  -- full stack project template\n> - `front`                -- frontend-only project template\n\n### Configure MySQL\n\nIf choose the template `front-backend-mysql`, please configure mysql connection parameters. (empty database just does well)\n\nEdit the file: `src/backend/config/config.default.js`\n``` javascript\n  // mysql\n  config.mysql = {\n    clients: {\n      // donot change the name  \n      __ebdb: {\n        host: '127.0.0.1',\n        port: '3306',\n        user: 'travis',\n        password: '',\n        database: 'egg-born',\n      },\n    },\n  };\n```\n\n### Run\n\nStart Backend Service\n``` bash\n$ npm run dev:backend\n```\n\nStart Frontend Service\n``` bash\n$ npm run dev:front\n```\n\n## EggBorn.js Structure Diagram\n\n### System Structure\n![](/en/images/EggBornJS.png)\n\n### Project Files Structure\n![](/en/images/structure.png)\n\n### Module Files Structure\n![](/en/images/privatemodule.png)\n![](/en/images/publicmodule.png)\n\n## Module Development\n\n### Naming Convention\n\nIn order to increase the business modules continuously and achieve a highly reusable effect, the namespace of all modules must be fully isolated, to avoid mutual pollution and conflict. Thus the naming convention is as follows:\n> egg-born-module-{providerId}-{moduleName}\n\nSuch as the module `egg-born-module-a-version`, the naming information is as follows:\n> - `providerId`: a\n> - `moduleName`: version\n> - `fullName`: egg-born-module-a-version\n> - `relativeName`: a-version\n> - frontend page route url: /a/version/{page}\n> - backend api route url: /a/version/{controller}/{action}\n\n### Loading Mechanism\n\nThe module supports both asynchronous loading and synchronous loading. Generally, the default is asynchronous loading. If you want to change it into synchronous loading, just add `-sync` suffix behind the module name, such as the module `egg-born-module-aa-login-sync`.\n\n### Create a module\nGoto path`src/module`, run the scaffolding to create the module files skeleton.\n``` bash\n$ egg-born module_relative_name\n```\n\n> At present, EggBorn.js offers two module scaffolds:\n> - `module`               -- full stack module template\n> - `module-front`         -- frontend-only module template\n\n### Module Frontend Development\n\n#### Frontend Page Route\nIn the file `front/src/routes.js`, add the page route:\n``` javascript\nfunction load(name) {\n  return require(`./pages/${name}.vue`).default;\n}\n\nexport default [\n  { path: 'welcome/:who', component: load('welcome') },\n  { path: 'profile', component: load('profile'), meta: { requiresAuth: true } },\n  { path: '/login', component: load('login') },\n];\n```\n\n> - `path`: supports parameters. If the path starts with `/`, represent the root page component. `login` page component is usually configured with `/`\n> - `component`: page component\n> - `meta`: route metadata\n> - `meta.requiresAuth`: If the page component needs to be logged in, it should be set to `true`\n\nIf you reference the page component in the page, please use the absolute path:\n``` html\n<f7-list-item link=\"/aa/hello/welcome/You\" title=\"Welcome\"></f7-list-item>\n<f7-list-item link=\"/aa/hello/profile\" title=\"Profile\"></f7-list-item>\n```\n\n#### Frontend State Management\n\nVuex is a state management library, which is developed specifically for Vue.js applications. EggBorn.js uses Vuex to implement a fully isolated module state management mechanism.\n\nIn the file `front/src/store.js`, add the state:\n``` javascript\nexport default function(Vue) {\n\n  return {\n    state: {\n      message: 'hello world',\n    },\n  };\n\n}\n```\n\nAccess the state of the same module in the page component:\n``` javascript\nconst message = this.$local.state.message;\n```\n\nAccess the state of the other module in the page component:\n``` javascript\nconst message = this.$store.state[providerId][moduleName].message;\n```\n\n> For more information, see [Vuex](https://vuex.vuejs.org/)\n\n#### Frontend Parameters Configuration\n\nIn the file `front/src/config/config.js`, add the configuration information:\n``` javascript\nexport default {\n  mode: 1,\n};\n```\n\nAccess the config of the same module in the page component:\n``` javascript\nconst mode = this.$config.mode;\n```\n\n#### Frontend I18N\n\nIn the directory `front/src/config/locale`, add the i18n file, such as `zh-cn.js`:\n``` javascript\nexport default {\n  mode: '模式',\n  \"Hello world! I'm %s.\": '您好，世界！我是%s。',  \n};\n```\n\nI18N resources can be merged globally, so as to share i18n resources through all the modules.\n\nAccess the i18n resources in the page component:\n``` javascript\nconst mode = this.$text('mode');\nconst message = this.$text(\"Hello world! I'm %s.\",'zhennann');\n```\n\n### Module Backend Development \n\n#### Backend API Route\n\nIn the file `backend/src/routes.js`, add the api route:\n``` javascript\nconst home = require('./controller/home.js');\n\nmodule.exports = [\n  { method: 'get', path: 'home/index', controller: home, action: 'index', transaction: true },\n];\n```\n\n> - `method`: get/post etc.\n> - `path`: Supports parameters\n> - `component`: Controller Component\n> - `action`: Controller Action. If not set, will use the last word of `path` automatically.\n> - `transaction`: Default is false. If set to true, the database transaction will be enabled.\n\nAccess the api route of the same module in the frontend page component:\n``` javascript\nthis.$api.get('home/index').then(data => {\n}).catch(err => {\n});\n```\n\nAccess the api route of the other module in the frontend page component:\n``` javascript\nthis.$api.get('/providerId/moduleName/home/index').then(data => {\n}).catch(err => {\n});\n```\n\n#### Backend Controller\n\nThe backend controller is consistent with Egg.js\n``` javascript\nmodule.exports = app => {\n  class HomeController extends app.Controller {\n\n    async index() {\n      const message = await this.service.home.index();\n      this.ctx.success(message);\n    }\n\n  }\n  return HomeController;\n};\n```\n\n> For more information，see [Egg.js Controller](https://eggjs.org/en/basics/controller.html)\n\n#### Backend Service\n\nService is used to encapsulate the business logics. It is consistent with Egg.js\n``` javascript\nmodule.exports = app => {\n  class Home extends app.Service {\n\n    async index() {\n      const res = await this.ctx.db.queryOne('show tables');\n      return res;\n    }\n\n  }\n\n  return Home;\n};\n```\n\n> Different from Service of Egg.js, Service of EggBorn.js uses `ctx.db` to manipulate the database, which automatically supports database transaction.\n\n> For more information，see [Egg.js Service](https://eggjs.org/en/basics/service.html)\n\n#### Backend Controller Interoperability\nFor the development of large-scale web application, EggBorn.js supports interoperability between the backend controllers, such as\n``` javascript\nconst message = await this.ctx.performAction({\n  method: 'get',\n  url: 'home/index',\n  query: {\n    username: 'kevin',\n  },\n  params: {\n    mode: 1,\n  },\n  body: {\n    content: 'ready',\n  },\n});\n```\n\n> - `method`: get/post etc.\n> - `url`: If access backend controller of the same module, please use the relative path. If access backend contrller of the other module, please use the absolute path with the beginning of `/`\n> - `query`、`params`、`body`: Same as Egg.js Controller\n\n#### Backend Database Operation\n\nThe backend database operation is consistent with Egg.js\n> For more information，see [Egg.js MySQL](https://eggjs.org/en/tutorials/mysql.html)\n\n#### Backend Database Transaction\n\nEggBorn.js offers a more convenient database transaction processing. You just need to configure the transaction parameter in the backend api route. Service uses `ctx.db` to operate database.\nIf the `controller caller` calls the `controller callee` through `ctx.performAction`, the database transaction status is as follow:\n\n| Controller Caller Config | Controller Callee Config | Controller Callee Status |\n|:----------------|:----------------|:-------------------- |\n| true            | true            | true                 |\n| true            | false           | true                 |\n| false           | true            | true                 |\n| false           | false           | false                |\n\n#### Backend Parameters Configuration\n\nIn the file `backend/src/config/config.js`, add the configuration information:\n``` javascript\nmodule.exports = appInfo => {\n  const config = {};\n\n  config.message = \"Hello world! I'm %s.\";\n\n  return config;\n};\n```\n\nAccess the config of the same module:\n``` javascript\nconst message = this.ctx.config.message;\n```\n\n#### Backend I18N\n\nIn the directory `backend/src/config/locale`, add the i18n file, such as `zh-cn.js`:\n``` javascript\nmodule.exports = {\n  \"Hello world! I'm %s.\": '您好，世界！我是%s。',\n  'not found': '未发现',\n};\n```\n\nI18N resources can be merged globally, so as to share i18n resources through all the modules.\n\nAccess the i18n resources:\n``` javascript\nconst notFound = this.ctx.text('not found');\nconst message = this.ctx.text(\"Hello world! I'm %s.\", 'zhennann');\n```\n\n#### Backend Error Handing\n\nIn the file `backend/src/config/errors.js`, add the error code:\n``` javascript\n// error code should start from 1001\nmodule.exports = {\n  1001: 'not found',\n};\n```\n\nReturn error object:\n``` javascript\nthis.ctx.fail(1001);\n```\n\nThrow error exception:\n``` javascript\nthis.ctx.throw(1001);\n```\n\n## Module Management\n\n### Module Dependencies\n\nEggBorn.js manages module dependencies through `package.json`.\n\nFor example, module `aa-module1` depends on `aa-module2`, and the following configuration is needed in the file `package.json` of the module `aa-module1`:\n``` json\n{\n  \"name\": \"egg-born-module-aa-module1\",\n  \"version\": \"0.0.1\",\n  \"eggBornModule\": {\n    \"dependencies\": {\n      \"aa-module2\": \"0.0.1\"\n    }\n  },\n  \"dependencies\": {\n    \"egg-born-module-aa-module2\": \"^0.0.1\"\n  }\n}\n```\n\n> Add `\"egg-born-module-aa-module2\": \"^0.0.1\"` so as to install the module `aa-module2` automatically when installing module `aa-module1`\n\n\n### Module Data Version\n\nGenerally Modules should operate the database. The database structure is also possible to change when the module version upgrade. EggBorn.js manage the module data version so as to facilitate the accumulation of business modules.\n\nIn the file `package.json` of the module, configure `fileVersion` as the current data version of the module:\n``` json\n{\n  \"name\": \"egg-born-module-aa-module1\",\n  \"version\": \"0.0.1\",\n  \"eggBornModule\": {\n    \"fileVersion\": 1\n  }\n}\n```\n\nAdd backend api route:\n``` javascript\n{ method: 'post', path: 'version/update', controller: version }\n```\n\nAdd backend controller:\n``` javascript\nmodule.exports = app => {\n  class VersionController extends app.Controller {\n\n    async update() {\n      await this.service.version.update(this.ctx.getInt('version'));\n      this.ctx.success();\n    }\n\n  }\n  return VersionController;\n};\n```\n\nAdd backend service:\n``` javascript\nmodule.exports = app => {\n\n  class Version extends app.Service {\n\n    async update(version) {\n      if (version === 1) {\n        // do something\n      }\n    }\n\n  }\n\n  return Version;\n};\n```\n\n> When the project started, EggBorn.js detects the change of the module data version automatically, and executes the corresponding api route to upgrade the data version.\n\n### Module Publish\n\nWhen the module in the project is stable, you can publish and contribute the module to the Open Source Community. You can also create private npm registry in your company, and then publish the module there, so as to form company assets for easy reuse.\n\n``` bash\n$ cd path/to/module      -- Goto the module directory\n$ npm install            -- Install module dependencies\n$ npm run build:front    -- Build frontend\n$ npm run build:backend  -- Build backend\n$ npm publish            -- Publish to npm registry\n```\n\n## Test Driven Development\nOnly backend test driven development is supported currently.\n\n### Backend Controller Test\n\nIn the directory `backend/test/controller`, add controller test file:\n``` javascript\n// controller/home.test.js\nconst { app, mockUrl, assert } = require('egg-born-mock')(__dirname);\n\ndescribe('test/controller/home.test.js', () => {\n\n  it('action:index', async () => {\n    const result = await app.httpRequest().get(mockUrl('home/index'));\n    assert(result.body.code === 0);\n  });\n\n});\n```\n\n### Backend Service Test\n\nIn the directory `backend/test/service`, add service test file:\n``` javascript\n// service/home.test.js\nconst { app, mockUrl, assert } = require('egg-born-mock')(__dirname);\n\ndescribe('test/service/home.test.js', () => {\n\n  it('index', async () => {\n    const ctx = app.mockContext({ mockUrl: mockUrl() });\n    const message = await ctx.service.home.index();\n    assert(message);\n  });\n\n});\n```\n\n### Run Test\n\nRun test in the project root directory:\n``` bash\n$ npm run test:backend\n$ npm run cov:backend\n```\n\n## Frontend Framework Configuration\n\n### Frontend Bootstrap\n\nFrontend provides two bootstraps\n\n> 1. Vue.js + Framework7\n> 2. Vue.js + Vue Router\n\nFramework7 is a mobile UI liabrary with built-in routing mechanism.\nVue Router is the official routing library for Vue.js. Vue Router can be used with other various UI libraries.\n\nSwitch in the file `src/front/main.js`:\n``` javascript\n// choose one\n\n//   framework7\nimport main from './framework7/main.js';\n\n//   vuerouter\n// import main from './vuerouter/main.js';\n\n// export\nexport default main;\n```\n\n### Frontend Parameters Configuration\n\nThe parameters of the file `src/front/config/config.js` can override the parameters of the modules\n``` javascript\nexport default{\n  module: {\n    'aa-hello': {\n      mode: 2,\n    },\n  },\n};\n```\n\n### Frontend I18N\n\nFramework i18n resources can override the modules's ones.\n\nIn the directory `src/front/config/locale`, add the i18n file, such as `zh-cn.js`:\n``` javascript\nexport default {\n  mode: '模式',\n};\n```\n\n## Backend Framework Configuration\n\n### Backend Framework\nEggBorn.js backend framework is based on Egg.js，so supports all of the features provided by Egg.js\n> For more information，see [Egg.js](https://eggjs.org/)\n\n### Backend Parameters Configuration\n\nThe parameters of the file `src/backend/config/config.default.js` can override the parameters of the modules.\n``` javascript\nmodule.exports = appInfo => {\n  const config = {};\n\n  // module config\n  config.module = {\n    'aa-hello': {\n      mode: 2,\n    },\n  };\n\n  return config;\n};\n```\n\n### Backend I18N\n\nFramework i18n resources can override the modules's ones.\n\nIn the directory `src/backend/config/locale`, add the i18n file, such as `zh-cn.js`:\n``` javascript\nmodule.exports = {\n  mode: '模式',\n};\n```\n\n## Project Deployment\n\n### Build Frontend\n``` bash\n$ npm run build:front\n```\n\n### Start Backend\n``` bash\n$ npm run start:backend\n```\n\n### Stop Backend\n``` bash\n$ npm run stop:backend\n```\n\n### Backend Start Parameters\nEdit the file `build/config.js`:\n``` javascript\n// backend\nconst backend = {\n  port: 7002,\n  hostname: '127.0.0.1',\n};\n```\n\n### Nginx Configuration\n\nSuggest to use Nginx hosting frontend static resources and reverse proxy backend service\n``` javascript\nserver {\n  listen 80;\n  server_name example.com www.example.com;\n  set $node_port 7002;\n\n  root /path/to/www;\n\n  location  /api/ {\n    proxy_http_version 1.1;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header Host $http_host;\n    proxy_set_header X-NginX-Proxy true;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection \"upgrade\";\n    proxy_pass http://127.0.0.1:$node_port$request_uri;\n    proxy_redirect off;\n  }\n\n}\n```\n\n## GitHub Contribution\n> Any questions, welcome to submit [issue](https://github.com/zhennann/egg-born/issues), or fork and submit [PR](https://github.com/zhennann/egg-born/pulls)!\n\n","slug":"tutorial","published":1,"updated":"2017-11-05T09:38:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj9mkg8ow0000bds3w7n5pjn1","content":"<h2 id=\"What-is-EggBorn-js\"><a href=\"#What-is-EggBorn-js\" class=\"headerlink\" title=\"What is EggBorn.js?\"></a>What is EggBorn.js?</h2><blockquote>\n<p>EggBorn.js is the Ultimate Javascript Full Stack Framework.</p>\n</blockquote>\n<p>EggBorn.js is the best practice for implementing full stack with Javascript.<br>EggBorn.js does not ‘Reinvent the Wheel’, but uses the latest open source technology, so as to achieve the best combination of the full stack development technology.<br>The frontend of EggBorn.js uses Vue.js + Framework 7 / Vue Router + Webpck, while the backend uses Koa.js + Egg.js, and the database uses mysql.<br>EggBorn.js keeps track of the latest achievements in open source technology, and continues to optimize to keep the entire framework in the best status.</p>\n<h2 id=\"EggBorn-js-Focus-on-Business-Modularization\"><a href=\"#EggBorn-js-Focus-on-Business-Modularization\" class=\"headerlink\" title=\"EggBorn.js Focus on: Business Modularization\"></a>EggBorn.js Focus on: Business Modularization</h2><p>With the developing of the javascript technology, the experience of the frontend and backend development becomes smoother, and the development efficiency enhance significantly. However, some friends still doubt whether it can be competent for the development of large-scale web applications. Large-scale web applications are characterized by the need to develop a large number of page components as business grows. Faced with this situation, generally there are two solutions:</p>\n<blockquote>\n<p>1 Build as a single page application: The disadvantage is that the deployment package is very large.<br>2 All page components are loaded asynchronously: The disadvantage is that the pages are too scattered, so the frontend should interact with the backend frequently.</p>\n</blockquote>\n<p>EggBorn.js implements the third solution:</p>\n<blockquote>\n<p>3 The page components are classified by business requirements, which is business modularization, and implements the business module’s asynchronous loading mechanism. Thus it makes up the shortcomings of the first two solutions and satisfies the needs of the large-scale web application.</p>\n</blockquote>\n<h2 id=\"EggBorn-js-Technical-Features\"><a href=\"#EggBorn-js-Technical-Features\" class=\"headerlink\" title=\"EggBorn.js Technical Features\"></a>EggBorn.js Technical Features</h2><ul>\n<li><strong>Business Modularization</strong>: The page components are arranged as modules.</li>\n<li><strong>Loading Flexibility</strong>: Modules can be loaded asynchronously or synchronously.</li>\n<li><strong>Highly Modular Cohesion</strong>: The module includes frontend page components and backend business logics.</li>\n<li><strong>Parameter Configuration Flexibility</strong>: Both frontend and backend of the module can be configured separately.</li>\n<li><strong>I18N</strong>: Both frontend and backend of the module support i18n separately.</li>\n<li><strong>Module Isolation</strong>: Module’s pages, data, logic, routing, configuration and other elements have been through namespace isolation processing, which avoids the variable pollutions and conflicts.</li>\n<li><strong>Easy Transaction Processing</strong>: Just configuring a parameter on the routing record can process the database transaction perfectly.</li>\n<li><strong>Progressive Development</strong>: Due to the high degree of cohesion of the module, EggBorn.js can deposit the business in the form of module, which can be reused in multiple projects. Business modules can be contributed to the npm Open Source Community, and can also be deployed to the company’s internal private npm registry.</li>\n</ul>\n<blockquote>\n<p>With EggBorn.js, not only the components can be reused, but also the business modules do in the future.</p>\n</blockquote>\n<h2 id=\"Getting-Started\"><a href=\"#Getting-Started\" class=\"headerlink\" title=\"Getting Started\"></a>Getting Started</h2><h3 id=\"Installation\"><a href=\"#Installation\" class=\"headerlink\" title=\"Installation\"></a>Installation</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install -g egg-born</div></pre></td></tr></table></figure>\n<h3 id=\"Create-a-project\"><a href=\"#Create-a-project\" class=\"headerlink\" title=\"Create a project\"></a>Create a project</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ egg-born project_name</div><div class=\"line\">$ <span class=\"built_in\">cd</span> project_name</div><div class=\"line\">$ npm install</div></pre></td></tr></table></figure>\n<blockquote>\n<p>Currently, EggBorn.js offers two project scaffolds:</p>\n<ul>\n<li><code>front-backend-mysql</code>  – full stack project template</li>\n<li><code>front</code>                – frontend-only project template</li>\n</ul>\n</blockquote>\n<h3 id=\"Configure-MySQL\"><a href=\"#Configure-MySQL\" class=\"headerlink\" title=\"Configure MySQL\"></a>Configure MySQL</h3><p>If choose the template <code>front-backend-mysql</code>, please configure mysql connection parameters. (empty database just does well)</p>\n<p>Edit the file: <code>src/backend/config/config.default.js</code><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// mysql</span></div><div class=\"line\">config.mysql = &#123;</div><div class=\"line\">  clients: &#123;</div><div class=\"line\">    <span class=\"comment\">// donot change the name  </span></div><div class=\"line\">    __ebdb: &#123;</div><div class=\"line\">      host: <span class=\"string\">'127.0.0.1'</span>,</div><div class=\"line\">      port: <span class=\"string\">'3306'</span>,</div><div class=\"line\">      user: <span class=\"string\">'travis'</span>,</div><div class=\"line\">      password: <span class=\"string\">''</span>,</div><div class=\"line\">      database: <span class=\"string\">'egg-born'</span>,</div><div class=\"line\">    &#125;,</div><div class=\"line\">  &#125;,</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<h3 id=\"Run\"><a href=\"#Run\" class=\"headerlink\" title=\"Run\"></a>Run</h3><p>Start Backend Service<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm run dev:backend</div></pre></td></tr></table></figure></p>\n<p>Start Frontend Service<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm run dev:front</div></pre></td></tr></table></figure></p>\n<h2 id=\"EggBorn-js-Structure-Diagram\"><a href=\"#EggBorn-js-Structure-Diagram\" class=\"headerlink\" title=\"EggBorn.js Structure Diagram\"></a>EggBorn.js Structure Diagram</h2><h3 id=\"System-Structure\"><a href=\"#System-Structure\" class=\"headerlink\" title=\"System Structure\"></a>System Structure</h3><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/en/images/EggBornJS.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<h3 id=\"Project-Files-Structure\"><a href=\"#Project-Files-Structure\" class=\"headerlink\" title=\"Project Files Structure\"></a>Project Files Structure</h3><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/en/images/structure.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<h3 id=\"Module-Files-Structure\"><a href=\"#Module-Files-Structure\" class=\"headerlink\" title=\"Module Files Structure\"></a>Module Files Structure</h3><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/en/images/privatemodule.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/en/images/publicmodule.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<h2 id=\"Module-Development\"><a href=\"#Module-Development\" class=\"headerlink\" title=\"Module Development\"></a>Module Development</h2><h3 id=\"Naming-Convention\"><a href=\"#Naming-Convention\" class=\"headerlink\" title=\"Naming Convention\"></a>Naming Convention</h3><p>In order to increase the business modules continuously and achieve a highly reusable effect, the namespace of all modules must be fully isolated, to avoid mutual pollution and conflict. Thus the naming convention is as follows:</p>\n<blockquote>\n<p>egg-born-module-{providerId}-{moduleName}</p>\n</blockquote>\n<p>Such as the module <code>egg-born-module-a-version</code>, the naming information is as follows:</p>\n<blockquote>\n<ul>\n<li><code>providerId</code>: a</li>\n<li><code>moduleName</code>: version</li>\n<li><code>fullName</code>: egg-born-module-a-version</li>\n<li><code>relativeName</code>: a-version</li>\n<li>frontend page route url: /a/version/{page}</li>\n<li>backend api route url: /a/version/{controller}/{action}</li>\n</ul>\n</blockquote>\n<h3 id=\"Loading-Mechanism\"><a href=\"#Loading-Mechanism\" class=\"headerlink\" title=\"Loading Mechanism\"></a>Loading Mechanism</h3><p>The module supports both asynchronous loading and synchronous loading. Generally, the default is asynchronous loading. If you want to change it into synchronous loading, just add <code>-sync</code> suffix behind the module name, such as the module <code>egg-born-module-aa-login-sync</code>.</p>\n<h3 id=\"Create-a-module\"><a href=\"#Create-a-module\" class=\"headerlink\" title=\"Create a module\"></a>Create a module</h3><p>Goto path<code>src/module</code>, run the scaffolding to create the module files skeleton.<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ egg-born module_relative_name</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>At present, EggBorn.js offers two module scaffolds:</p>\n<ul>\n<li><code>module</code>               – full stack module template</li>\n<li><code>module-front</code>         – frontend-only module template</li>\n</ul>\n</blockquote>\n<h3 id=\"Module-Frontend-Development\"><a href=\"#Module-Frontend-Development\" class=\"headerlink\" title=\"Module Frontend Development\"></a>Module Frontend Development</h3><h4 id=\"Frontend-Page-Route\"><a href=\"#Frontend-Page-Route\" class=\"headerlink\" title=\"Frontend Page Route\"></a>Frontend Page Route</h4><p>In the file <code>front/src/routes.js</code>, add the page route:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">load</span>(<span class=\"params\">name</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">require</span>(<span class=\"string\">`./pages/<span class=\"subst\">$&#123;name&#125;</span>.vue`</span>).default;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> [</div><div class=\"line\">  &#123; <span class=\"attr\">path</span>: <span class=\"string\">'welcome/:who'</span>, <span class=\"attr\">component</span>: load(<span class=\"string\">'welcome'</span>) &#125;,</div><div class=\"line\">  &#123; <span class=\"attr\">path</span>: <span class=\"string\">'profile'</span>, <span class=\"attr\">component</span>: load(<span class=\"string\">'profile'</span>), <span class=\"attr\">meta</span>: &#123; <span class=\"attr\">requiresAuth</span>: <span class=\"literal\">true</span> &#125; &#125;,</div><div class=\"line\">  &#123; <span class=\"attr\">path</span>: <span class=\"string\">'/login'</span>, <span class=\"attr\">component</span>: load(<span class=\"string\">'login'</span>) &#125;,</div><div class=\"line\">];</div></pre></td></tr></table></figure></p>\n<blockquote>\n<ul>\n<li><code>path</code>: supports parameters. If the path starts with <code>/</code>, represent the root page component. <code>login</code> page component is usually configured with <code>/</code></li>\n<li><code>component</code>: page component</li>\n<li><code>meta</code>: route metadata</li>\n<li><code>meta.requiresAuth</code>: If the page component needs to be logged in, it should be set to <code>true</code></li>\n</ul>\n</blockquote>\n<p>If you reference the page component in the page, please use the absolute path:<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">f7-list-item</span> <span class=\"attr\">link</span>=<span class=\"string\">\"/aa/hello/welcome/You\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Welcome\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">f7-list-item</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">f7-list-item</span> <span class=\"attr\">link</span>=<span class=\"string\">\"/aa/hello/profile\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Profile\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">f7-list-item</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h4 id=\"Frontend-State-Management\"><a href=\"#Frontend-State-Management\" class=\"headerlink\" title=\"Frontend State Management\"></a>Frontend State Management</h4><p>Vuex is a state management library, which is developed specifically for Vue.js applications. EggBorn.js uses Vuex to implement a fully isolated module state management mechanism.</p>\n<p>In the file <code>front/src/store.js</code>, add the state:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">Vue</span>) </span>&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">    state: &#123;</div><div class=\"line\">      message: <span class=\"string\">'hello world'</span>,</div><div class=\"line\">    &#125;,</div><div class=\"line\">  &#125;;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>Access the state of the same module in the page component:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> message = <span class=\"keyword\">this</span>.$local.state.message;</div></pre></td></tr></table></figure></p>\n<p>Access the state of the other module in the page component:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> message = <span class=\"keyword\">this</span>.$store.state[providerId][moduleName].message;</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>For more information, see <a href=\"https://vuex.vuejs.org/\" target=\"_blank\" rel=\"external\">Vuex</a></p>\n</blockquote>\n<h4 id=\"Frontend-Parameters-Configuration\"><a href=\"#Frontend-Parameters-Configuration\" class=\"headerlink\" title=\"Frontend Parameters Configuration\"></a>Frontend Parameters Configuration</h4><p>In the file <code>front/src/config/config.js</code>, add the configuration information:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  mode: <span class=\"number\">1</span>,</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<p>Access the config of the same module in the page component:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> mode = <span class=\"keyword\">this</span>.$config.mode;</div></pre></td></tr></table></figure></p>\n<h4 id=\"Frontend-I18N\"><a href=\"#Frontend-I18N\" class=\"headerlink\" title=\"Frontend I18N\"></a>Frontend I18N</h4><p>In the directory <code>front/src/config/locale</code>, add the i18n file, such as <code>zh-cn.js</code>:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  mode: <span class=\"string\">'模式'</span>,</div><div class=\"line\">  <span class=\"string\">\"Hello world! I'm %s.\"</span>: <span class=\"string\">'您好，世界！我是%s。'</span>,  </div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<p>I18N resources can be merged globally, so as to share i18n resources through all the modules.</p>\n<p>Access the i18n resources in the page component:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> mode = <span class=\"keyword\">this</span>.$text(<span class=\"string\">'mode'</span>);</div><div class=\"line\"><span class=\"keyword\">const</span> message = <span class=\"keyword\">this</span>.$text(<span class=\"string\">\"Hello world! I'm %s.\"</span>,<span class=\"string\">'zhennann'</span>);</div></pre></td></tr></table></figure></p>\n<h3 id=\"Module-Backend-Development\"><a href=\"#Module-Backend-Development\" class=\"headerlink\" title=\"Module Backend Development\"></a>Module Backend Development</h3><h4 id=\"Backend-API-Route\"><a href=\"#Backend-API-Route\" class=\"headerlink\" title=\"Backend API Route\"></a>Backend API Route</h4><p>In the file <code>backend/src/routes.js</code>, add the api route:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> home = <span class=\"built_in\">require</span>(<span class=\"string\">'./controller/home.js'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = [</div><div class=\"line\">  &#123; <span class=\"attr\">method</span>: <span class=\"string\">'get'</span>, <span class=\"attr\">path</span>: <span class=\"string\">'home/index'</span>, <span class=\"attr\">controller</span>: home, <span class=\"attr\">action</span>: <span class=\"string\">'index'</span>, <span class=\"attr\">transaction</span>: <span class=\"literal\">true</span> &#125;,</div><div class=\"line\">];</div></pre></td></tr></table></figure></p>\n<blockquote>\n<ul>\n<li><code>method</code>: get/post etc.</li>\n<li><code>path</code>: Supports parameters</li>\n<li><code>component</code>: Controller Component</li>\n<li><code>action</code>: Controller Action. If not set, will use the last word of <code>path</code> automatically.</li>\n<li><code>transaction</code>: Default is false. If set to true, the database transaction will be enabled.</li>\n</ul>\n</blockquote>\n<p>Access the api route of the same module in the frontend page component:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">this</span>.$api.get(<span class=\"string\">'home/index'</span>).then(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</div><div class=\"line\">&#125;).catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<p>Access the api route of the other module in the frontend page component:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">this</span>.$api.get(<span class=\"string\">'/providerId/moduleName/home/index'</span>).then(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</div><div class=\"line\">&#125;).catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<h4 id=\"Backend-Controller\"><a href=\"#Backend-Controller\" class=\"headerlink\" title=\"Backend Controller\"></a>Backend Controller</h4><p>The backend controller is consistent with Egg.js<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"params\">app</span> =&gt;</span> &#123;</div><div class=\"line\">  <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HomeController</span> <span class=\"keyword\">extends</span> <span class=\"title\">app</span>.<span class=\"title\">Controller</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">async</span> index() &#123;</div><div class=\"line\">      <span class=\"keyword\">const</span> message = <span class=\"keyword\">await</span> <span class=\"keyword\">this</span>.service.home.index();</div><div class=\"line\">      <span class=\"keyword\">this</span>.ctx.success(message);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">return</span> HomeController;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>For more information，see <a href=\"https://eggjs.org/en/basics/controller.html\" target=\"_blank\" rel=\"external\">Egg.js Controller</a></p>\n</blockquote>\n<h4 id=\"Backend-Service\"><a href=\"#Backend-Service\" class=\"headerlink\" title=\"Backend Service\"></a>Backend Service</h4><p>Service is used to encapsulate the business logics. It is consistent with Egg.js<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"params\">app</span> =&gt;</span> &#123;</div><div class=\"line\">  <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Home</span> <span class=\"keyword\">extends</span> <span class=\"title\">app</span>.<span class=\"title\">Service</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">async</span> index() &#123;</div><div class=\"line\">      <span class=\"keyword\">const</span> res = <span class=\"keyword\">await</span> <span class=\"keyword\">this</span>.ctx.db.queryOne(<span class=\"string\">'show tables'</span>);</div><div class=\"line\">      <span class=\"keyword\">return</span> res;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> Home;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>Different from Service of Egg.js, Service of EggBorn.js uses <code>ctx.db</code> to manipulate the database, which automatically supports database transaction.</p>\n<p>For more information，see <a href=\"https://eggjs.org/en/basics/service.html\" target=\"_blank\" rel=\"external\">Egg.js Service</a></p>\n</blockquote>\n<h4 id=\"Backend-Controller-Interoperability\"><a href=\"#Backend-Controller-Interoperability\" class=\"headerlink\" title=\"Backend Controller Interoperability\"></a>Backend Controller Interoperability</h4><p>For the development of large-scale web application, EggBorn.js supports interoperability between the backend controllers, such as<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> message = <span class=\"keyword\">await</span> <span class=\"keyword\">this</span>.ctx.performAction(&#123;</div><div class=\"line\">  method: <span class=\"string\">'get'</span>,</div><div class=\"line\">  url: <span class=\"string\">'home/index'</span>,</div><div class=\"line\">  query: &#123;</div><div class=\"line\">    username: <span class=\"string\">'kevin'</span>,</div><div class=\"line\">  &#125;,</div><div class=\"line\">  params: &#123;</div><div class=\"line\">    mode: <span class=\"number\">1</span>,</div><div class=\"line\">  &#125;,</div><div class=\"line\">  body: &#123;</div><div class=\"line\">    content: <span class=\"string\">'ready'</span>,</div><div class=\"line\">  &#125;,</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<blockquote>\n<ul>\n<li><code>method</code>: get/post etc.</li>\n<li><code>url</code>: If access backend controller of the same module, please use the relative path. If access backend contrller of the other module, please use the absolute path with the beginning of <code>/</code></li>\n<li><code>query</code>、<code>params</code>、<code>body</code>: Same as Egg.js Controller</li>\n</ul>\n</blockquote>\n<h4 id=\"Backend-Database-Operation\"><a href=\"#Backend-Database-Operation\" class=\"headerlink\" title=\"Backend Database Operation\"></a>Backend Database Operation</h4><p>The backend database operation is consistent with Egg.js</p>\n<blockquote>\n<p>For more information，see <a href=\"https://eggjs.org/en/tutorials/mysql.html\" target=\"_blank\" rel=\"external\">Egg.js MySQL</a></p>\n</blockquote>\n<h4 id=\"Backend-Database-Transaction\"><a href=\"#Backend-Database-Transaction\" class=\"headerlink\" title=\"Backend Database Transaction\"></a>Backend Database Transaction</h4><p>EggBorn.js offers a more convenient database transaction processing. You just need to configure the transaction parameter in the backend api route. Service uses <code>ctx.db</code> to operate database.<br>If the <code>controller caller</code> calls the <code>controller callee</code> through <code>ctx.performAction</code>, the database transaction status is as follow:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Controller Caller Config</th>\n<th style=\"text-align:left\">Controller Callee Config</th>\n<th style=\"text-align:left\">Controller Callee Status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">true</td>\n<td style=\"text-align:left\">true</td>\n<td style=\"text-align:left\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">true</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true</td>\n<td style=\"text-align:left\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">false</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"Backend-Parameters-Configuration\"><a href=\"#Backend-Parameters-Configuration\" class=\"headerlink\" title=\"Backend Parameters Configuration\"></a>Backend Parameters Configuration</h4><p>In the file <code>backend/src/config/config.js</code>, add the configuration information:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"params\">appInfo</span> =&gt;</span> &#123;</div><div class=\"line\">  <span class=\"keyword\">const</span> config = &#123;&#125;;</div><div class=\"line\"></div><div class=\"line\">  config.message = <span class=\"string\">\"Hello world! I'm %s.\"</span>;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> config;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<p>Access the config of the same module:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> message = <span class=\"keyword\">this</span>.ctx.config.message;</div></pre></td></tr></table></figure></p>\n<h4 id=\"Backend-I18N\"><a href=\"#Backend-I18N\" class=\"headerlink\" title=\"Backend I18N\"></a>Backend I18N</h4><p>In the directory <code>backend/src/config/locale</code>, add the i18n file, such as <code>zh-cn.js</code>:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</div><div class=\"line\">  <span class=\"string\">\"Hello world! I'm %s.\"</span>: <span class=\"string\">'您好，世界！我是%s。'</span>,</div><div class=\"line\">  <span class=\"string\">'not found'</span>: <span class=\"string\">'未发现'</span>,</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<p>I18N resources can be merged globally, so as to share i18n resources through all the modules.</p>\n<p>Access the i18n resources:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> notFound = <span class=\"keyword\">this</span>.ctx.text(<span class=\"string\">'not found'</span>);</div><div class=\"line\"><span class=\"keyword\">const</span> message = <span class=\"keyword\">this</span>.ctx.text(<span class=\"string\">\"Hello world! I'm %s.\"</span>, <span class=\"string\">'zhennann'</span>);</div></pre></td></tr></table></figure></p>\n<h4 id=\"Backend-Error-Handing\"><a href=\"#Backend-Error-Handing\" class=\"headerlink\" title=\"Backend Error Handing\"></a>Backend Error Handing</h4><p>In the file <code>backend/src/config/errors.js</code>, add the error code:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// error code should start from 1001</span></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</div><div class=\"line\">  <span class=\"number\">1001</span>: <span class=\"string\">'not found'</span>,</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<p>Return error object:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">this</span>.ctx.fail(<span class=\"number\">1001</span>);</div></pre></td></tr></table></figure></p>\n<p>Throw error exception:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">this</span>.ctx.throw(<span class=\"number\">1001</span>);</div></pre></td></tr></table></figure></p>\n<h2 id=\"Module-Management\"><a href=\"#Module-Management\" class=\"headerlink\" title=\"Module Management\"></a>Module Management</h2><h3 id=\"Module-Dependencies\"><a href=\"#Module-Dependencies\" class=\"headerlink\" title=\"Module Dependencies\"></a>Module Dependencies</h3><p>EggBorn.js manages module dependencies through <code>package.json</code>.</p>\n<p>For example, module <code>aa-module1</code> depends on <code>aa-module2</code>, and the following configuration is needed in the file <code>package.json</code> of the module <code>aa-module1</code>:<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"egg-born-module-aa-module1\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.1\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"eggBornModule\"</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">\"dependencies\"</span>: &#123;</div><div class=\"line\">      <span class=\"attr\">\"aa-module2\"</span>: <span class=\"string\">\"0.0.1\"</span></div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">\"dependencies\"</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">\"egg-born-module-aa-module2\"</span>: <span class=\"string\">\"^0.0.1\"</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>Add <code>&quot;egg-born-module-aa-module2&quot;: &quot;^0.0.1&quot;</code> so as to install the module <code>aa-module2</code> automatically when installing module <code>aa-module1</code></p>\n</blockquote>\n<h3 id=\"Module-Data-Version\"><a href=\"#Module-Data-Version\" class=\"headerlink\" title=\"Module Data Version\"></a>Module Data Version</h3><p>Generally Modules should operate the database. The database structure is also possible to change when the module version upgrade. EggBorn.js manage the module data version so as to facilitate the accumulation of business modules.</p>\n<p>In the file <code>package.json</code> of the module, configure <code>fileVersion</code> as the current data version of the module:<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"egg-born-module-aa-module1\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.1\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"eggBornModule\"</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">\"fileVersion\"</span>: <span class=\"number\">1</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>Add backend api route:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123; <span class=\"attr\">method</span>: <span class=\"string\">'post'</span>, <span class=\"attr\">path</span>: <span class=\"string\">'version/update'</span>, <span class=\"attr\">controller</span>: version &#125;</div></pre></td></tr></table></figure></p>\n<p>Add backend controller:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"params\">app</span> =&gt;</span> &#123;</div><div class=\"line\">  <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">VersionController</span> <span class=\"keyword\">extends</span> <span class=\"title\">app</span>.<span class=\"title\">Controller</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">async</span> update() &#123;</div><div class=\"line\">      <span class=\"keyword\">await</span> <span class=\"keyword\">this</span>.service.version.update(<span class=\"keyword\">this</span>.ctx.getInt(<span class=\"string\">'version'</span>));</div><div class=\"line\">      <span class=\"keyword\">this</span>.ctx.success();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">return</span> VersionController;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<p>Add backend service:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"params\">app</span> =&gt;</span> &#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Version</span> <span class=\"keyword\">extends</span> <span class=\"title\">app</span>.<span class=\"title\">Service</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">async</span> update(version) &#123;</div><div class=\"line\">      <span class=\"keyword\">if</span> (version === <span class=\"number\">1</span>) &#123;</div><div class=\"line\">        <span class=\"comment\">// do something</span></div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> Version;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>When the project started, EggBorn.js detects the change of the module data version automatically, and executes the corresponding api route to upgrade the data version.</p>\n</blockquote>\n<h3 id=\"Module-Publish\"><a href=\"#Module-Publish\" class=\"headerlink\" title=\"Module Publish\"></a>Module Publish</h3><p>When the module in the project is stable, you can publish and contribute the module to the Open Source Community. You can also create private npm registry in your company, and then publish the module there, so as to form company assets for easy reuse.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"built_in\">cd</span> path/to/module      -- Goto the module directory</div><div class=\"line\">$ npm install            -- Install module dependencies</div><div class=\"line\">$ npm run build:front    -- Build frontend</div><div class=\"line\">$ npm run build:backend  -- Build backend</div><div class=\"line\">$ npm publish            -- Publish to npm registry</div></pre></td></tr></table></figure>\n<h2 id=\"Test-Driven-Development\"><a href=\"#Test-Driven-Development\" class=\"headerlink\" title=\"Test Driven Development\"></a>Test Driven Development</h2><p>Only backend test driven development is supported currently.</p>\n<h3 id=\"Backend-Controller-Test\"><a href=\"#Backend-Controller-Test\" class=\"headerlink\" title=\"Backend Controller Test\"></a>Backend Controller Test</h3><p>In the directory <code>backend/test/controller</code>, add controller test file:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// controller/home.test.js</span></div><div class=\"line\"><span class=\"keyword\">const</span> &#123; app, mockUrl, assert &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'egg-born-mock'</span>)(__dirname);</div><div class=\"line\"></div><div class=\"line\">describe(<span class=\"string\">'test/controller/home.test.js'</span>, () =&gt; &#123;</div><div class=\"line\"></div><div class=\"line\">  it(<span class=\"string\">'action:index'</span>, <span class=\"keyword\">async</span> () =&gt; &#123;</div><div class=\"line\">    <span class=\"keyword\">const</span> result = <span class=\"keyword\">await</span> app.httpRequest().get(mockUrl(<span class=\"string\">'home/index'</span>));</div><div class=\"line\">    assert(result.body.code === <span class=\"number\">0</span>);</div><div class=\"line\">  &#125;);</div><div class=\"line\"></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<h3 id=\"Backend-Service-Test\"><a href=\"#Backend-Service-Test\" class=\"headerlink\" title=\"Backend Service Test\"></a>Backend Service Test</h3><p>In the directory <code>backend/test/service</code>, add service test file:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// service/home.test.js</span></div><div class=\"line\"><span class=\"keyword\">const</span> &#123; app, mockUrl, assert &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'egg-born-mock'</span>)(__dirname);</div><div class=\"line\"></div><div class=\"line\">describe(<span class=\"string\">'test/service/home.test.js'</span>, () =&gt; &#123;</div><div class=\"line\"></div><div class=\"line\">  it(<span class=\"string\">'index'</span>, <span class=\"keyword\">async</span> () =&gt; &#123;</div><div class=\"line\">    <span class=\"keyword\">const</span> ctx = app.mockContext(&#123; <span class=\"attr\">mockUrl</span>: mockUrl() &#125;);</div><div class=\"line\">    <span class=\"keyword\">const</span> message = <span class=\"keyword\">await</span> ctx.service.home.index();</div><div class=\"line\">    assert(message);</div><div class=\"line\">  &#125;);</div><div class=\"line\"></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<h3 id=\"Run-Test\"><a href=\"#Run-Test\" class=\"headerlink\" title=\"Run Test\"></a>Run Test</h3><p>Run test in the project root directory:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm run <span class=\"built_in\">test</span>:backend</div><div class=\"line\">$ npm run cov:backend</div></pre></td></tr></table></figure></p>\n<h2 id=\"Frontend-Framework-Configuration\"><a href=\"#Frontend-Framework-Configuration\" class=\"headerlink\" title=\"Frontend Framework Configuration\"></a>Frontend Framework Configuration</h2><h3 id=\"Frontend-Bootstrap\"><a href=\"#Frontend-Bootstrap\" class=\"headerlink\" title=\"Frontend Bootstrap\"></a>Frontend Bootstrap</h3><p>Frontend provides two bootstraps</p>\n<blockquote>\n<ol>\n<li>Vue.js + Framework7</li>\n<li>Vue.js + Vue Router</li>\n</ol>\n</blockquote>\n<p>Framework7 is a mobile UI liabrary with built-in routing mechanism.<br>Vue Router is the official routing library for Vue.js. Vue Router can be used with other various UI libraries.</p>\n<p>Switch in the file <code>src/front/main.js</code>:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// choose one</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//   framework7</span></div><div class=\"line\"><span class=\"keyword\">import</span> main <span class=\"keyword\">from</span> <span class=\"string\">'./framework7/main.js'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//   vuerouter</span></div><div class=\"line\"><span class=\"comment\">// import main from './vuerouter/main.js';</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// export</span></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> main;</div></pre></td></tr></table></figure></p>\n<h3 id=\"Frontend-Parameters-Configuration-1\"><a href=\"#Frontend-Parameters-Configuration-1\" class=\"headerlink\" title=\"Frontend Parameters Configuration\"></a>Frontend Parameters Configuration</h3><p>The parameters of the file <code>src/front/config/config.js</code> can override the parameters of the modules<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span>&#123;</div><div class=\"line\">  <span class=\"built_in\">module</span>: &#123;</div><div class=\"line\">    <span class=\"string\">'aa-hello'</span>: &#123;</div><div class=\"line\">      mode: <span class=\"number\">2</span>,</div><div class=\"line\">    &#125;,</div><div class=\"line\">  &#125;,</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<h3 id=\"Frontend-I18N-1\"><a href=\"#Frontend-I18N-1\" class=\"headerlink\" title=\"Frontend I18N\"></a>Frontend I18N</h3><p>Framework i18n resources can override the modules’s ones.</p>\n<p>In the directory <code>src/front/config/locale</code>, add the i18n file, such as <code>zh-cn.js</code>:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  mode: <span class=\"string\">'模式'</span>,</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<h2 id=\"Backend-Framework-Configuration\"><a href=\"#Backend-Framework-Configuration\" class=\"headerlink\" title=\"Backend Framework Configuration\"></a>Backend Framework Configuration</h2><h3 id=\"Backend-Framework\"><a href=\"#Backend-Framework\" class=\"headerlink\" title=\"Backend Framework\"></a>Backend Framework</h3><p>EggBorn.js backend framework is based on Egg.js，so supports all of the features provided by Egg.js</p>\n<blockquote>\n<p>For more information，see <a href=\"https://eggjs.org/\" target=\"_blank\" rel=\"external\">Egg.js</a></p>\n</blockquote>\n<h3 id=\"Backend-Parameters-Configuration-1\"><a href=\"#Backend-Parameters-Configuration-1\" class=\"headerlink\" title=\"Backend Parameters Configuration\"></a>Backend Parameters Configuration</h3><p>The parameters of the file <code>src/backend/config/config.default.js</code> can override the parameters of the modules.<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"params\">appInfo</span> =&gt;</span> &#123;</div><div class=\"line\">  <span class=\"keyword\">const</span> config = &#123;&#125;;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// module config</span></div><div class=\"line\">  config.module = &#123;</div><div class=\"line\">    <span class=\"string\">'aa-hello'</span>: &#123;</div><div class=\"line\">      mode: <span class=\"number\">2</span>,</div><div class=\"line\">    &#125;,</div><div class=\"line\">  &#125;;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> config;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<h3 id=\"Backend-I18N-1\"><a href=\"#Backend-I18N-1\" class=\"headerlink\" title=\"Backend I18N\"></a>Backend I18N</h3><p>Framework i18n resources can override the modules’s ones.</p>\n<p>In the directory <code>src/backend/config/locale</code>, add the i18n file, such as <code>zh-cn.js</code>:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</div><div class=\"line\">  mode: <span class=\"string\">'模式'</span>,</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<h2 id=\"Project-Deployment\"><a href=\"#Project-Deployment\" class=\"headerlink\" title=\"Project Deployment\"></a>Project Deployment</h2><h3 id=\"Build-Frontend\"><a href=\"#Build-Frontend\" class=\"headerlink\" title=\"Build Frontend\"></a>Build Frontend</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm run build:front</div></pre></td></tr></table></figure>\n<h3 id=\"Start-Backend\"><a href=\"#Start-Backend\" class=\"headerlink\" title=\"Start Backend\"></a>Start Backend</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm run start:backend</div></pre></td></tr></table></figure>\n<h3 id=\"Stop-Backend\"><a href=\"#Stop-Backend\" class=\"headerlink\" title=\"Stop Backend\"></a>Stop Backend</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm run stop:backend</div></pre></td></tr></table></figure>\n<h3 id=\"Backend-Start-Parameters\"><a href=\"#Backend-Start-Parameters\" class=\"headerlink\" title=\"Backend Start Parameters\"></a>Backend Start Parameters</h3><p>Edit the file <code>build/config.js</code>:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// backend</span></div><div class=\"line\"><span class=\"keyword\">const</span> backend = &#123;</div><div class=\"line\">  port: <span class=\"number\">7002</span>,</div><div class=\"line\">  hostname: <span class=\"string\">'127.0.0.1'</span>,</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<h3 id=\"Nginx-Configuration\"><a href=\"#Nginx-Configuration\" class=\"headerlink\" title=\"Nginx Configuration\"></a>Nginx Configuration</h3><p>Suggest to use Nginx hosting frontend static resources and reverse proxy backend service<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">server &#123;</div><div class=\"line\">  listen <span class=\"number\">80</span>;</div><div class=\"line\">  server_name example.com www.example.com;</div><div class=\"line\">  set $node_port <span class=\"number\">7002</span>;</div><div class=\"line\"></div><div class=\"line\">  root /path/to/www;</div><div class=\"line\"></div><div class=\"line\">  location  /api/ &#123;</div><div class=\"line\">    proxy_http_version <span class=\"number\">1.1</span>;</div><div class=\"line\">    proxy_set_header X-Real-IP $remote_addr;</div><div class=\"line\">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class=\"line\">    proxy_set_header Host $http_host;</div><div class=\"line\">    proxy_set_header X-NginX-<span class=\"built_in\">Proxy</span> <span class=\"literal\">true</span>;</div><div class=\"line\">    proxy_set_header Upgrade $http_upgrade;</div><div class=\"line\">    proxy_set_header Connection <span class=\"string\">\"upgrade\"</span>;</div><div class=\"line\">    proxy_pass http:<span class=\"comment\">//127.0.0.1:$node_port$request_uri;</span></div><div class=\"line\">    proxy_redirect off;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"GitHub-Contribution\"><a href=\"#GitHub-Contribution\" class=\"headerlink\" title=\"GitHub Contribution\"></a>GitHub Contribution</h2><blockquote>\n<p>Any questions, welcome to submit <a href=\"https://github.com/zhennann/egg-born/issues\" target=\"_blank\" rel=\"external\">issue</a>, or fork and submit <a href=\"https://github.com/zhennann/egg-born/pulls\" target=\"_blank\" rel=\"external\">PR</a>!</p>\n</blockquote>\n","site":{"data":{"languages":{"zh-cn":"简体中文","en":"English"}}},"excerpt":"","more":"<h2 id=\"What-is-EggBorn-js\"><a href=\"#What-is-EggBorn-js\" class=\"headerlink\" title=\"What is EggBorn.js?\"></a>What is EggBorn.js?</h2><blockquote>\n<p>EggBorn.js is the Ultimate Javascript Full Stack Framework.</p>\n</blockquote>\n<p>EggBorn.js is the best practice for implementing full stack with Javascript.<br>EggBorn.js does not ‘Reinvent the Wheel’, but uses the latest open source technology, so as to achieve the best combination of the full stack development technology.<br>The frontend of EggBorn.js uses Vue.js + Framework 7 / Vue Router + Webpck, while the backend uses Koa.js + Egg.js, and the database uses mysql.<br>EggBorn.js keeps track of the latest achievements in open source technology, and continues to optimize to keep the entire framework in the best status.</p>\n<h2 id=\"EggBorn-js-Focus-on-Business-Modularization\"><a href=\"#EggBorn-js-Focus-on-Business-Modularization\" class=\"headerlink\" title=\"EggBorn.js Focus on: Business Modularization\"></a>EggBorn.js Focus on: Business Modularization</h2><p>With the developing of the javascript technology, the experience of the frontend and backend development becomes smoother, and the development efficiency enhance significantly. However, some friends still doubt whether it can be competent for the development of large-scale web applications. Large-scale web applications are characterized by the need to develop a large number of page components as business grows. Faced with this situation, generally there are two solutions:</p>\n<blockquote>\n<p>1 Build as a single page application: The disadvantage is that the deployment package is very large.<br>2 All page components are loaded asynchronously: The disadvantage is that the pages are too scattered, so the frontend should interact with the backend frequently.</p>\n</blockquote>\n<p>EggBorn.js implements the third solution:</p>\n<blockquote>\n<p>3 The page components are classified by business requirements, which is business modularization, and implements the business module’s asynchronous loading mechanism. Thus it makes up the shortcomings of the first two solutions and satisfies the needs of the large-scale web application.</p>\n</blockquote>\n<h2 id=\"EggBorn-js-Technical-Features\"><a href=\"#EggBorn-js-Technical-Features\" class=\"headerlink\" title=\"EggBorn.js Technical Features\"></a>EggBorn.js Technical Features</h2><ul>\n<li><strong>Business Modularization</strong>: The page components are arranged as modules.</li>\n<li><strong>Loading Flexibility</strong>: Modules can be loaded asynchronously or synchronously.</li>\n<li><strong>Highly Modular Cohesion</strong>: The module includes frontend page components and backend business logics.</li>\n<li><strong>Parameter Configuration Flexibility</strong>: Both frontend and backend of the module can be configured separately.</li>\n<li><strong>I18N</strong>: Both frontend and backend of the module support i18n separately.</li>\n<li><strong>Module Isolation</strong>: Module’s pages, data, logic, routing, configuration and other elements have been through namespace isolation processing, which avoids the variable pollutions and conflicts.</li>\n<li><strong>Easy Transaction Processing</strong>: Just configuring a parameter on the routing record can process the database transaction perfectly.</li>\n<li><strong>Progressive Development</strong>: Due to the high degree of cohesion of the module, EggBorn.js can deposit the business in the form of module, which can be reused in multiple projects. Business modules can be contributed to the npm Open Source Community, and can also be deployed to the company’s internal private npm registry.</li>\n</ul>\n<blockquote>\n<p>With EggBorn.js, not only the components can be reused, but also the business modules do in the future.</p>\n</blockquote>\n<h2 id=\"Getting-Started\"><a href=\"#Getting-Started\" class=\"headerlink\" title=\"Getting Started\"></a>Getting Started</h2><h3 id=\"Installation\"><a href=\"#Installation\" class=\"headerlink\" title=\"Installation\"></a>Installation</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm install -g egg-born</div></pre></td></tr></table></figure>\n<h3 id=\"Create-a-project\"><a href=\"#Create-a-project\" class=\"headerlink\" title=\"Create a project\"></a>Create a project</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ egg-born project_name</div><div class=\"line\">$ <span class=\"built_in\">cd</span> project_name</div><div class=\"line\">$ npm install</div></pre></td></tr></table></figure>\n<blockquote>\n<p>Currently, EggBorn.js offers two project scaffolds:</p>\n<ul>\n<li><code>front-backend-mysql</code>  – full stack project template</li>\n<li><code>front</code>                – frontend-only project template</li>\n</ul>\n</blockquote>\n<h3 id=\"Configure-MySQL\"><a href=\"#Configure-MySQL\" class=\"headerlink\" title=\"Configure MySQL\"></a>Configure MySQL</h3><p>If choose the template <code>front-backend-mysql</code>, please configure mysql connection parameters. (empty database just does well)</p>\n<p>Edit the file: <code>src/backend/config/config.default.js</code><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// mysql</span></div><div class=\"line\">config.mysql = &#123;</div><div class=\"line\">  clients: &#123;</div><div class=\"line\">    <span class=\"comment\">// donot change the name  </span></div><div class=\"line\">    __ebdb: &#123;</div><div class=\"line\">      host: <span class=\"string\">'127.0.0.1'</span>,</div><div class=\"line\">      port: <span class=\"string\">'3306'</span>,</div><div class=\"line\">      user: <span class=\"string\">'travis'</span>,</div><div class=\"line\">      password: <span class=\"string\">''</span>,</div><div class=\"line\">      database: <span class=\"string\">'egg-born'</span>,</div><div class=\"line\">    &#125;,</div><div class=\"line\">  &#125;,</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<h3 id=\"Run\"><a href=\"#Run\" class=\"headerlink\" title=\"Run\"></a>Run</h3><p>Start Backend Service<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm run dev:backend</div></pre></td></tr></table></figure></p>\n<p>Start Frontend Service<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm run dev:front</div></pre></td></tr></table></figure></p>\n<h2 id=\"EggBorn-js-Structure-Diagram\"><a href=\"#EggBorn-js-Structure-Diagram\" class=\"headerlink\" title=\"EggBorn.js Structure Diagram\"></a>EggBorn.js Structure Diagram</h2><h3 id=\"System-Structure\"><a href=\"#System-Structure\" class=\"headerlink\" title=\"System Structure\"></a>System Structure</h3><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/en/images/EggBornJS.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<h3 id=\"Project-Files-Structure\"><a href=\"#Project-Files-Structure\" class=\"headerlink\" title=\"Project Files Structure\"></a>Project Files Structure</h3><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/en/images/structure.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<h3 id=\"Module-Files-Structure\"><a href=\"#Module-Files-Structure\" class=\"headerlink\" title=\"Module Files Structure\"></a>Module Files Structure</h3><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/en/images/privatemodule.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/en/images/publicmodule.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<h2 id=\"Module-Development\"><a href=\"#Module-Development\" class=\"headerlink\" title=\"Module Development\"></a>Module Development</h2><h3 id=\"Naming-Convention\"><a href=\"#Naming-Convention\" class=\"headerlink\" title=\"Naming Convention\"></a>Naming Convention</h3><p>In order to increase the business modules continuously and achieve a highly reusable effect, the namespace of all modules must be fully isolated, to avoid mutual pollution and conflict. Thus the naming convention is as follows:</p>\n<blockquote>\n<p>egg-born-module-{providerId}-{moduleName}</p>\n</blockquote>\n<p>Such as the module <code>egg-born-module-a-version</code>, the naming information is as follows:</p>\n<blockquote>\n<ul>\n<li><code>providerId</code>: a</li>\n<li><code>moduleName</code>: version</li>\n<li><code>fullName</code>: egg-born-module-a-version</li>\n<li><code>relativeName</code>: a-version</li>\n<li>frontend page route url: /a/version/{page}</li>\n<li>backend api route url: /a/version/{controller}/{action}</li>\n</ul>\n</blockquote>\n<h3 id=\"Loading-Mechanism\"><a href=\"#Loading-Mechanism\" class=\"headerlink\" title=\"Loading Mechanism\"></a>Loading Mechanism</h3><p>The module supports both asynchronous loading and synchronous loading. Generally, the default is asynchronous loading. If you want to change it into synchronous loading, just add <code>-sync</code> suffix behind the module name, such as the module <code>egg-born-module-aa-login-sync</code>.</p>\n<h3 id=\"Create-a-module\"><a href=\"#Create-a-module\" class=\"headerlink\" title=\"Create a module\"></a>Create a module</h3><p>Goto path<code>src/module</code>, run the scaffolding to create the module files skeleton.<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ egg-born module_relative_name</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>At present, EggBorn.js offers two module scaffolds:</p>\n<ul>\n<li><code>module</code>               – full stack module template</li>\n<li><code>module-front</code>         – frontend-only module template</li>\n</ul>\n</blockquote>\n<h3 id=\"Module-Frontend-Development\"><a href=\"#Module-Frontend-Development\" class=\"headerlink\" title=\"Module Frontend Development\"></a>Module Frontend Development</h3><h4 id=\"Frontend-Page-Route\"><a href=\"#Frontend-Page-Route\" class=\"headerlink\" title=\"Frontend Page Route\"></a>Frontend Page Route</h4><p>In the file <code>front/src/routes.js</code>, add the page route:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">load</span>(<span class=\"params\">name</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">require</span>(<span class=\"string\">`./pages/<span class=\"subst\">$&#123;name&#125;</span>.vue`</span>).default;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> [</div><div class=\"line\">  &#123; <span class=\"attr\">path</span>: <span class=\"string\">'welcome/:who'</span>, <span class=\"attr\">component</span>: load(<span class=\"string\">'welcome'</span>) &#125;,</div><div class=\"line\">  &#123; <span class=\"attr\">path</span>: <span class=\"string\">'profile'</span>, <span class=\"attr\">component</span>: load(<span class=\"string\">'profile'</span>), <span class=\"attr\">meta</span>: &#123; <span class=\"attr\">requiresAuth</span>: <span class=\"literal\">true</span> &#125; &#125;,</div><div class=\"line\">  &#123; <span class=\"attr\">path</span>: <span class=\"string\">'/login'</span>, <span class=\"attr\">component</span>: load(<span class=\"string\">'login'</span>) &#125;,</div><div class=\"line\">];</div></pre></td></tr></table></figure></p>\n<blockquote>\n<ul>\n<li><code>path</code>: supports parameters. If the path starts with <code>/</code>, represent the root page component. <code>login</code> page component is usually configured with <code>/</code></li>\n<li><code>component</code>: page component</li>\n<li><code>meta</code>: route metadata</li>\n<li><code>meta.requiresAuth</code>: If the page component needs to be logged in, it should be set to <code>true</code></li>\n</ul>\n</blockquote>\n<p>If you reference the page component in the page, please use the absolute path:<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">f7-list-item</span> <span class=\"attr\">link</span>=<span class=\"string\">\"/aa/hello/welcome/You\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Welcome\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">f7-list-item</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">f7-list-item</span> <span class=\"attr\">link</span>=<span class=\"string\">\"/aa/hello/profile\"</span> <span class=\"attr\">title</span>=<span class=\"string\">\"Profile\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">f7-list-item</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<h4 id=\"Frontend-State-Management\"><a href=\"#Frontend-State-Management\" class=\"headerlink\" title=\"Frontend State Management\"></a>Frontend State Management</h4><p>Vuex is a state management library, which is developed specifically for Vue.js applications. EggBorn.js uses Vuex to implement a fully isolated module state management mechanism.</p>\n<p>In the file <code>front/src/store.js</code>, add the state:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">Vue</span>) </span>&#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">    state: &#123;</div><div class=\"line\">      message: <span class=\"string\">'hello world'</span>,</div><div class=\"line\">    &#125;,</div><div class=\"line\">  &#125;;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>Access the state of the same module in the page component:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> message = <span class=\"keyword\">this</span>.$local.state.message;</div></pre></td></tr></table></figure></p>\n<p>Access the state of the other module in the page component:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> message = <span class=\"keyword\">this</span>.$store.state[providerId][moduleName].message;</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>For more information, see <a href=\"https://vuex.vuejs.org/\" target=\"_blank\" rel=\"external\">Vuex</a></p>\n</blockquote>\n<h4 id=\"Frontend-Parameters-Configuration\"><a href=\"#Frontend-Parameters-Configuration\" class=\"headerlink\" title=\"Frontend Parameters Configuration\"></a>Frontend Parameters Configuration</h4><p>In the file <code>front/src/config/config.js</code>, add the configuration information:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  mode: <span class=\"number\">1</span>,</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<p>Access the config of the same module in the page component:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> mode = <span class=\"keyword\">this</span>.$config.mode;</div></pre></td></tr></table></figure></p>\n<h4 id=\"Frontend-I18N\"><a href=\"#Frontend-I18N\" class=\"headerlink\" title=\"Frontend I18N\"></a>Frontend I18N</h4><p>In the directory <code>front/src/config/locale</code>, add the i18n file, such as <code>zh-cn.js</code>:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  mode: <span class=\"string\">'模式'</span>,</div><div class=\"line\">  <span class=\"string\">\"Hello world! I'm %s.\"</span>: <span class=\"string\">'您好，世界！我是%s。'</span>,  </div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<p>I18N resources can be merged globally, so as to share i18n resources through all the modules.</p>\n<p>Access the i18n resources in the page component:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> mode = <span class=\"keyword\">this</span>.$text(<span class=\"string\">'mode'</span>);</div><div class=\"line\"><span class=\"keyword\">const</span> message = <span class=\"keyword\">this</span>.$text(<span class=\"string\">\"Hello world! I'm %s.\"</span>,<span class=\"string\">'zhennann'</span>);</div></pre></td></tr></table></figure></p>\n<h3 id=\"Module-Backend-Development\"><a href=\"#Module-Backend-Development\" class=\"headerlink\" title=\"Module Backend Development\"></a>Module Backend Development</h3><h4 id=\"Backend-API-Route\"><a href=\"#Backend-API-Route\" class=\"headerlink\" title=\"Backend API Route\"></a>Backend API Route</h4><p>In the file <code>backend/src/routes.js</code>, add the api route:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> home = <span class=\"built_in\">require</span>(<span class=\"string\">'./controller/home.js'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = [</div><div class=\"line\">  &#123; <span class=\"attr\">method</span>: <span class=\"string\">'get'</span>, <span class=\"attr\">path</span>: <span class=\"string\">'home/index'</span>, <span class=\"attr\">controller</span>: home, <span class=\"attr\">action</span>: <span class=\"string\">'index'</span>, <span class=\"attr\">transaction</span>: <span class=\"literal\">true</span> &#125;,</div><div class=\"line\">];</div></pre></td></tr></table></figure></p>\n<blockquote>\n<ul>\n<li><code>method</code>: get/post etc.</li>\n<li><code>path</code>: Supports parameters</li>\n<li><code>component</code>: Controller Component</li>\n<li><code>action</code>: Controller Action. If not set, will use the last word of <code>path</code> automatically.</li>\n<li><code>transaction</code>: Default is false. If set to true, the database transaction will be enabled.</li>\n</ul>\n</blockquote>\n<p>Access the api route of the same module in the frontend page component:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">this</span>.$api.get(<span class=\"string\">'home/index'</span>).then(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</div><div class=\"line\">&#125;).catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<p>Access the api route of the other module in the frontend page component:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">this</span>.$api.get(<span class=\"string\">'/providerId/moduleName/home/index'</span>).then(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</div><div class=\"line\">&#125;).catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<h4 id=\"Backend-Controller\"><a href=\"#Backend-Controller\" class=\"headerlink\" title=\"Backend Controller\"></a>Backend Controller</h4><p>The backend controller is consistent with Egg.js<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"params\">app</span> =&gt;</span> &#123;</div><div class=\"line\">  <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HomeController</span> <span class=\"keyword\">extends</span> <span class=\"title\">app</span>.<span class=\"title\">Controller</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">async</span> index() &#123;</div><div class=\"line\">      <span class=\"keyword\">const</span> message = <span class=\"keyword\">await</span> <span class=\"keyword\">this</span>.service.home.index();</div><div class=\"line\">      <span class=\"keyword\">this</span>.ctx.success(message);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">return</span> HomeController;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>For more information，see <a href=\"https://eggjs.org/en/basics/controller.html\" target=\"_blank\" rel=\"external\">Egg.js Controller</a></p>\n</blockquote>\n<h4 id=\"Backend-Service\"><a href=\"#Backend-Service\" class=\"headerlink\" title=\"Backend Service\"></a>Backend Service</h4><p>Service is used to encapsulate the business logics. It is consistent with Egg.js<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"params\">app</span> =&gt;</span> &#123;</div><div class=\"line\">  <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Home</span> <span class=\"keyword\">extends</span> <span class=\"title\">app</span>.<span class=\"title\">Service</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">async</span> index() &#123;</div><div class=\"line\">      <span class=\"keyword\">const</span> res = <span class=\"keyword\">await</span> <span class=\"keyword\">this</span>.ctx.db.queryOne(<span class=\"string\">'show tables'</span>);</div><div class=\"line\">      <span class=\"keyword\">return</span> res;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> Home;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>Different from Service of Egg.js, Service of EggBorn.js uses <code>ctx.db</code> to manipulate the database, which automatically supports database transaction.</p>\n<p>For more information，see <a href=\"https://eggjs.org/en/basics/service.html\" target=\"_blank\" rel=\"external\">Egg.js Service</a></p>\n</blockquote>\n<h4 id=\"Backend-Controller-Interoperability\"><a href=\"#Backend-Controller-Interoperability\" class=\"headerlink\" title=\"Backend Controller Interoperability\"></a>Backend Controller Interoperability</h4><p>For the development of large-scale web application, EggBorn.js supports interoperability between the backend controllers, such as<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> message = <span class=\"keyword\">await</span> <span class=\"keyword\">this</span>.ctx.performAction(&#123;</div><div class=\"line\">  method: <span class=\"string\">'get'</span>,</div><div class=\"line\">  url: <span class=\"string\">'home/index'</span>,</div><div class=\"line\">  query: &#123;</div><div class=\"line\">    username: <span class=\"string\">'kevin'</span>,</div><div class=\"line\">  &#125;,</div><div class=\"line\">  params: &#123;</div><div class=\"line\">    mode: <span class=\"number\">1</span>,</div><div class=\"line\">  &#125;,</div><div class=\"line\">  body: &#123;</div><div class=\"line\">    content: <span class=\"string\">'ready'</span>,</div><div class=\"line\">  &#125;,</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<blockquote>\n<ul>\n<li><code>method</code>: get/post etc.</li>\n<li><code>url</code>: If access backend controller of the same module, please use the relative path. If access backend contrller of the other module, please use the absolute path with the beginning of <code>/</code></li>\n<li><code>query</code>、<code>params</code>、<code>body</code>: Same as Egg.js Controller</li>\n</ul>\n</blockquote>\n<h4 id=\"Backend-Database-Operation\"><a href=\"#Backend-Database-Operation\" class=\"headerlink\" title=\"Backend Database Operation\"></a>Backend Database Operation</h4><p>The backend database operation is consistent with Egg.js</p>\n<blockquote>\n<p>For more information，see <a href=\"https://eggjs.org/en/tutorials/mysql.html\" target=\"_blank\" rel=\"external\">Egg.js MySQL</a></p>\n</blockquote>\n<h4 id=\"Backend-Database-Transaction\"><a href=\"#Backend-Database-Transaction\" class=\"headerlink\" title=\"Backend Database Transaction\"></a>Backend Database Transaction</h4><p>EggBorn.js offers a more convenient database transaction processing. You just need to configure the transaction parameter in the backend api route. Service uses <code>ctx.db</code> to operate database.<br>If the <code>controller caller</code> calls the <code>controller callee</code> through <code>ctx.performAction</code>, the database transaction status is as follow:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Controller Caller Config</th>\n<th style=\"text-align:left\">Controller Callee Config</th>\n<th style=\"text-align:left\">Controller Callee Status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">true</td>\n<td style=\"text-align:left\">true</td>\n<td style=\"text-align:left\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">true</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true</td>\n<td style=\"text-align:left\">true</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">false</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"Backend-Parameters-Configuration\"><a href=\"#Backend-Parameters-Configuration\" class=\"headerlink\" title=\"Backend Parameters Configuration\"></a>Backend Parameters Configuration</h4><p>In the file <code>backend/src/config/config.js</code>, add the configuration information:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"params\">appInfo</span> =&gt;</span> &#123;</div><div class=\"line\">  <span class=\"keyword\">const</span> config = &#123;&#125;;</div><div class=\"line\"></div><div class=\"line\">  config.message = <span class=\"string\">\"Hello world! I'm %s.\"</span>;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> config;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<p>Access the config of the same module:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> message = <span class=\"keyword\">this</span>.ctx.config.message;</div></pre></td></tr></table></figure></p>\n<h4 id=\"Backend-I18N\"><a href=\"#Backend-I18N\" class=\"headerlink\" title=\"Backend I18N\"></a>Backend I18N</h4><p>In the directory <code>backend/src/config/locale</code>, add the i18n file, such as <code>zh-cn.js</code>:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</div><div class=\"line\">  <span class=\"string\">\"Hello world! I'm %s.\"</span>: <span class=\"string\">'您好，世界！我是%s。'</span>,</div><div class=\"line\">  <span class=\"string\">'not found'</span>: <span class=\"string\">'未发现'</span>,</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<p>I18N resources can be merged globally, so as to share i18n resources through all the modules.</p>\n<p>Access the i18n resources:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> notFound = <span class=\"keyword\">this</span>.ctx.text(<span class=\"string\">'not found'</span>);</div><div class=\"line\"><span class=\"keyword\">const</span> message = <span class=\"keyword\">this</span>.ctx.text(<span class=\"string\">\"Hello world! I'm %s.\"</span>, <span class=\"string\">'zhennann'</span>);</div></pre></td></tr></table></figure></p>\n<h4 id=\"Backend-Error-Handing\"><a href=\"#Backend-Error-Handing\" class=\"headerlink\" title=\"Backend Error Handing\"></a>Backend Error Handing</h4><p>In the file <code>backend/src/config/errors.js</code>, add the error code:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// error code should start from 1001</span></div><div class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</div><div class=\"line\">  <span class=\"number\">1001</span>: <span class=\"string\">'not found'</span>,</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<p>Return error object:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">this</span>.ctx.fail(<span class=\"number\">1001</span>);</div></pre></td></tr></table></figure></p>\n<p>Throw error exception:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">this</span>.ctx.throw(<span class=\"number\">1001</span>);</div></pre></td></tr></table></figure></p>\n<h2 id=\"Module-Management\"><a href=\"#Module-Management\" class=\"headerlink\" title=\"Module Management\"></a>Module Management</h2><h3 id=\"Module-Dependencies\"><a href=\"#Module-Dependencies\" class=\"headerlink\" title=\"Module Dependencies\"></a>Module Dependencies</h3><p>EggBorn.js manages module dependencies through <code>package.json</code>.</p>\n<p>For example, module <code>aa-module1</code> depends on <code>aa-module2</code>, and the following configuration is needed in the file <code>package.json</code> of the module <code>aa-module1</code>:<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"egg-born-module-aa-module1\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.1\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"eggBornModule\"</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">\"dependencies\"</span>: &#123;</div><div class=\"line\">      <span class=\"attr\">\"aa-module2\"</span>: <span class=\"string\">\"0.0.1\"</span></div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">\"dependencies\"</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">\"egg-born-module-aa-module2\"</span>: <span class=\"string\">\"^0.0.1\"</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>Add <code>&quot;egg-born-module-aa-module2&quot;: &quot;^0.0.1&quot;</code> so as to install the module <code>aa-module2</code> automatically when installing module <code>aa-module1</code></p>\n</blockquote>\n<h3 id=\"Module-Data-Version\"><a href=\"#Module-Data-Version\" class=\"headerlink\" title=\"Module Data Version\"></a>Module Data Version</h3><p>Generally Modules should operate the database. The database structure is also possible to change when the module version upgrade. EggBorn.js manage the module data version so as to facilitate the accumulation of business modules.</p>\n<p>In the file <code>package.json</code> of the module, configure <code>fileVersion</code> as the current data version of the module:<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"egg-born-module-aa-module1\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.1\"</span>,</div><div class=\"line\">  <span class=\"attr\">\"eggBornModule\"</span>: &#123;</div><div class=\"line\">    <span class=\"attr\">\"fileVersion\"</span>: <span class=\"number\">1</span></div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>Add backend api route:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123; <span class=\"attr\">method</span>: <span class=\"string\">'post'</span>, <span class=\"attr\">path</span>: <span class=\"string\">'version/update'</span>, <span class=\"attr\">controller</span>: version &#125;</div></pre></td></tr></table></figure></p>\n<p>Add backend controller:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"params\">app</span> =&gt;</span> &#123;</div><div class=\"line\">  <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">VersionController</span> <span class=\"keyword\">extends</span> <span class=\"title\">app</span>.<span class=\"title\">Controller</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">async</span> update() &#123;</div><div class=\"line\">      <span class=\"keyword\">await</span> <span class=\"keyword\">this</span>.service.version.update(<span class=\"keyword\">this</span>.ctx.getInt(<span class=\"string\">'version'</span>));</div><div class=\"line\">      <span class=\"keyword\">this</span>.ctx.success();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">return</span> VersionController;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<p>Add backend service:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"params\">app</span> =&gt;</span> &#123;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Version</span> <span class=\"keyword\">extends</span> <span class=\"title\">app</span>.<span class=\"title\">Service</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">async</span> update(version) &#123;</div><div class=\"line\">      <span class=\"keyword\">if</span> (version === <span class=\"number\">1</span>) &#123;</div><div class=\"line\">        <span class=\"comment\">// do something</span></div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> Version;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>When the project started, EggBorn.js detects the change of the module data version automatically, and executes the corresponding api route to upgrade the data version.</p>\n</blockquote>\n<h3 id=\"Module-Publish\"><a href=\"#Module-Publish\" class=\"headerlink\" title=\"Module Publish\"></a>Module Publish</h3><p>When the module in the project is stable, you can publish and contribute the module to the Open Source Community. You can also create private npm registry in your company, and then publish the module there, so as to form company assets for easy reuse.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"built_in\">cd</span> path/to/module      -- Goto the module directory</div><div class=\"line\">$ npm install            -- Install module dependencies</div><div class=\"line\">$ npm run build:front    -- Build frontend</div><div class=\"line\">$ npm run build:backend  -- Build backend</div><div class=\"line\">$ npm publish            -- Publish to npm registry</div></pre></td></tr></table></figure>\n<h2 id=\"Test-Driven-Development\"><a href=\"#Test-Driven-Development\" class=\"headerlink\" title=\"Test Driven Development\"></a>Test Driven Development</h2><p>Only backend test driven development is supported currently.</p>\n<h3 id=\"Backend-Controller-Test\"><a href=\"#Backend-Controller-Test\" class=\"headerlink\" title=\"Backend Controller Test\"></a>Backend Controller Test</h3><p>In the directory <code>backend/test/controller</code>, add controller test file:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// controller/home.test.js</span></div><div class=\"line\"><span class=\"keyword\">const</span> &#123; app, mockUrl, assert &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'egg-born-mock'</span>)(__dirname);</div><div class=\"line\"></div><div class=\"line\">describe(<span class=\"string\">'test/controller/home.test.js'</span>, () =&gt; &#123;</div><div class=\"line\"></div><div class=\"line\">  it(<span class=\"string\">'action:index'</span>, <span class=\"keyword\">async</span> () =&gt; &#123;</div><div class=\"line\">    <span class=\"keyword\">const</span> result = <span class=\"keyword\">await</span> app.httpRequest().get(mockUrl(<span class=\"string\">'home/index'</span>));</div><div class=\"line\">    assert(result.body.code === <span class=\"number\">0</span>);</div><div class=\"line\">  &#125;);</div><div class=\"line\"></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<h3 id=\"Backend-Service-Test\"><a href=\"#Backend-Service-Test\" class=\"headerlink\" title=\"Backend Service Test\"></a>Backend Service Test</h3><p>In the directory <code>backend/test/service</code>, add service test file:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// service/home.test.js</span></div><div class=\"line\"><span class=\"keyword\">const</span> &#123; app, mockUrl, assert &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'egg-born-mock'</span>)(__dirname);</div><div class=\"line\"></div><div class=\"line\">describe(<span class=\"string\">'test/service/home.test.js'</span>, () =&gt; &#123;</div><div class=\"line\"></div><div class=\"line\">  it(<span class=\"string\">'index'</span>, <span class=\"keyword\">async</span> () =&gt; &#123;</div><div class=\"line\">    <span class=\"keyword\">const</span> ctx = app.mockContext(&#123; <span class=\"attr\">mockUrl</span>: mockUrl() &#125;);</div><div class=\"line\">    <span class=\"keyword\">const</span> message = <span class=\"keyword\">await</span> ctx.service.home.index();</div><div class=\"line\">    assert(message);</div><div class=\"line\">  &#125;);</div><div class=\"line\"></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<h3 id=\"Run-Test\"><a href=\"#Run-Test\" class=\"headerlink\" title=\"Run Test\"></a>Run Test</h3><p>Run test in the project root directory:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm run <span class=\"built_in\">test</span>:backend</div><div class=\"line\">$ npm run cov:backend</div></pre></td></tr></table></figure></p>\n<h2 id=\"Frontend-Framework-Configuration\"><a href=\"#Frontend-Framework-Configuration\" class=\"headerlink\" title=\"Frontend Framework Configuration\"></a>Frontend Framework Configuration</h2><h3 id=\"Frontend-Bootstrap\"><a href=\"#Frontend-Bootstrap\" class=\"headerlink\" title=\"Frontend Bootstrap\"></a>Frontend Bootstrap</h3><p>Frontend provides two bootstraps</p>\n<blockquote>\n<ol>\n<li>Vue.js + Framework7</li>\n<li>Vue.js + Vue Router</li>\n</ol>\n</blockquote>\n<p>Framework7 is a mobile UI liabrary with built-in routing mechanism.<br>Vue Router is the official routing library for Vue.js. Vue Router can be used with other various UI libraries.</p>\n<p>Switch in the file <code>src/front/main.js</code>:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// choose one</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//   framework7</span></div><div class=\"line\"><span class=\"keyword\">import</span> main <span class=\"keyword\">from</span> <span class=\"string\">'./framework7/main.js'</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//   vuerouter</span></div><div class=\"line\"><span class=\"comment\">// import main from './vuerouter/main.js';</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// export</span></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> main;</div></pre></td></tr></table></figure></p>\n<h3 id=\"Frontend-Parameters-Configuration-1\"><a href=\"#Frontend-Parameters-Configuration-1\" class=\"headerlink\" title=\"Frontend Parameters Configuration\"></a>Frontend Parameters Configuration</h3><p>The parameters of the file <code>src/front/config/config.js</code> can override the parameters of the modules<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span>&#123;</div><div class=\"line\">  <span class=\"built_in\">module</span>: &#123;</div><div class=\"line\">    <span class=\"string\">'aa-hello'</span>: &#123;</div><div class=\"line\">      mode: <span class=\"number\">2</span>,</div><div class=\"line\">    &#125;,</div><div class=\"line\">  &#125;,</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<h3 id=\"Frontend-I18N-1\"><a href=\"#Frontend-I18N-1\" class=\"headerlink\" title=\"Frontend I18N\"></a>Frontend I18N</h3><p>Framework i18n resources can override the modules’s ones.</p>\n<p>In the directory <code>src/front/config/locale</code>, add the i18n file, such as <code>zh-cn.js</code>:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</div><div class=\"line\">  mode: <span class=\"string\">'模式'</span>,</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<h2 id=\"Backend-Framework-Configuration\"><a href=\"#Backend-Framework-Configuration\" class=\"headerlink\" title=\"Backend Framework Configuration\"></a>Backend Framework Configuration</h2><h3 id=\"Backend-Framework\"><a href=\"#Backend-Framework\" class=\"headerlink\" title=\"Backend Framework\"></a>Backend Framework</h3><p>EggBorn.js backend framework is based on Egg.js，so supports all of the features provided by Egg.js</p>\n<blockquote>\n<p>For more information，see <a href=\"https://eggjs.org/\" target=\"_blank\" rel=\"external\">Egg.js</a></p>\n</blockquote>\n<h3 id=\"Backend-Parameters-Configuration-1\"><a href=\"#Backend-Parameters-Configuration-1\" class=\"headerlink\" title=\"Backend Parameters Configuration\"></a>Backend Parameters Configuration</h3><p>The parameters of the file <code>src/backend/config/config.default.js</code> can override the parameters of the modules.<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"params\">appInfo</span> =&gt;</span> &#123;</div><div class=\"line\">  <span class=\"keyword\">const</span> config = &#123;&#125;;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// module config</span></div><div class=\"line\">  config.module = &#123;</div><div class=\"line\">    <span class=\"string\">'aa-hello'</span>: &#123;</div><div class=\"line\">      mode: <span class=\"number\">2</span>,</div><div class=\"line\">    &#125;,</div><div class=\"line\">  &#125;;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> config;</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<h3 id=\"Backend-I18N-1\"><a href=\"#Backend-I18N-1\" class=\"headerlink\" title=\"Backend I18N\"></a>Backend I18N</h3><p>Framework i18n resources can override the modules’s ones.</p>\n<p>In the directory <code>src/backend/config/locale</code>, add the i18n file, such as <code>zh-cn.js</code>:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</div><div class=\"line\">  mode: <span class=\"string\">'模式'</span>,</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<h2 id=\"Project-Deployment\"><a href=\"#Project-Deployment\" class=\"headerlink\" title=\"Project Deployment\"></a>Project Deployment</h2><h3 id=\"Build-Frontend\"><a href=\"#Build-Frontend\" class=\"headerlink\" title=\"Build Frontend\"></a>Build Frontend</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm run build:front</div></pre></td></tr></table></figure>\n<h3 id=\"Start-Backend\"><a href=\"#Start-Backend\" class=\"headerlink\" title=\"Start Backend\"></a>Start Backend</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm run start:backend</div></pre></td></tr></table></figure>\n<h3 id=\"Stop-Backend\"><a href=\"#Stop-Backend\" class=\"headerlink\" title=\"Stop Backend\"></a>Stop Backend</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ npm run stop:backend</div></pre></td></tr></table></figure>\n<h3 id=\"Backend-Start-Parameters\"><a href=\"#Backend-Start-Parameters\" class=\"headerlink\" title=\"Backend Start Parameters\"></a>Backend Start Parameters</h3><p>Edit the file <code>build/config.js</code>:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// backend</span></div><div class=\"line\"><span class=\"keyword\">const</span> backend = &#123;</div><div class=\"line\">  port: <span class=\"number\">7002</span>,</div><div class=\"line\">  hostname: <span class=\"string\">'127.0.0.1'</span>,</div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure></p>\n<h3 id=\"Nginx-Configuration\"><a href=\"#Nginx-Configuration\" class=\"headerlink\" title=\"Nginx Configuration\"></a>Nginx Configuration</h3><p>Suggest to use Nginx hosting frontend static resources and reverse proxy backend service<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">server &#123;</div><div class=\"line\">  listen <span class=\"number\">80</span>;</div><div class=\"line\">  server_name example.com www.example.com;</div><div class=\"line\">  set $node_port <span class=\"number\">7002</span>;</div><div class=\"line\"></div><div class=\"line\">  root /path/to/www;</div><div class=\"line\"></div><div class=\"line\">  location  /api/ &#123;</div><div class=\"line\">    proxy_http_version <span class=\"number\">1.1</span>;</div><div class=\"line\">    proxy_set_header X-Real-IP $remote_addr;</div><div class=\"line\">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class=\"line\">    proxy_set_header Host $http_host;</div><div class=\"line\">    proxy_set_header X-NginX-<span class=\"built_in\">Proxy</span> <span class=\"literal\">true</span>;</div><div class=\"line\">    proxy_set_header Upgrade $http_upgrade;</div><div class=\"line\">    proxy_set_header Connection <span class=\"string\">\"upgrade\"</span>;</div><div class=\"line\">    proxy_pass http:<span class=\"comment\">//127.0.0.1:$node_port$request_uri;</span></div><div class=\"line\">    proxy_redirect off;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"GitHub-Contribution\"><a href=\"#GitHub-Contribution\" class=\"headerlink\" title=\"GitHub Contribution\"></a>GitHub Contribution</h2><blockquote>\n<p>Any questions, welcome to submit <a href=\"https://github.com/zhennann/egg-born/issues\" target=\"_blank\" rel=\"external\">issue</a>, or fork and submit <a href=\"https://github.com/zhennann/egg-born/pulls\" target=\"_blank\" rel=\"external\">PR</a>!</p>\n</blockquote>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cj9mkg8ow0000bds3w7n5pjn1","category_id":"cj9mkg8p40001bds3txf74trd","_id":"cj9mkg8p60002bds39cvy6r75"}],"PostTag":[],"Tag":[]}}